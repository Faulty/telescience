{"version":3,"sources":["space.png","components/Images.js","components/Locations.js","components/MapSelect.js","components/FavoritesMenu.js","components/HelperText.js","components/DoMath.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Images","_ref","selectedMap","image","info","cogmap1","nW","nH","url","cogmap2","faintSignal","oshan","clarion","mapInfo","react_default","a","createElement","onDragStart","e","preventDefault","arr","i","g","push","concat","map","className","key","alt","src","withStyles","theme","main","marginTop","spacing","unit","line","fontSize","typography","caption","list","maxHeight","overflow","arrow","transition","transitions","create","easing","sharp","duration","enteringScreen","arrowShift","transform","headerText","marginLeft","props","classes","math","_useState","useState","_useState2","Object","slicedToArray","collapseIn","collapse","index_es","onClick","align","variant","disabled","icons_index_es","in","component","name","location","loc","_math$modifiers","modifiers","xModifier","yModifier","_math$divisors","divisors","xDivisor","yDivisor","toString","toUpperCase","paper","position","marginRight","textField","margin","width","selectMap","InputProps","inputProps","tabIndex","select","label","value","onChange","val","target","SelectProps","MenuProps","menu","centerCoords","zoom","favorites","modFavorites","handleCollapse","_useState3","_useState4","permaCollapse","doPermaCollapse","useEffect","length","aria-owns","undefined","aria-haspopup","id","each","index","onContextMenu","listItemClick","FormHelperTextProps","style","textAlign","helperText","startAdornment","aria-label","endAdornment","favs","filter","items","type","HelperText","zIndex","resultsPos","popOver","popOverText","maxWidth","goto","rightPanel","top","right","selectedTile","anchorEl","doAnchor","input","actualX","actualY","gpsValues","setValue","_useState5","_useState6","mathIn","toggleMath","Fragment","padding","update","event","currentTarget","parseInt","prev","open","Boolean","onClose","anchorOrigin","vertical","horizontal","size","href","rel","components_HelperText","components_Locations","components_MapSelect","components_FavoritesMenu","backgroundImage","spaceTile","display","height","verticalAlign","noClick","userSelect","initial","mouse","pos","tf","setZoom","scale","mousedown","clickDown","_useState7","_useState8","focussed","focus","_useState9","removeTarget","_useState10","doMenu","_useState11","_useState12","_useState13","_useState14","iStyles","divStyle","transformOrigin","selectorStyle","left","oceanMan","Svg","onWheel","mouseWheel","onMouseEnter","stroke","color","fill","strokeWidth","onKeyDown","acceptableKeys","w","s","d","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","1","2","3","4","6","7","8","9","+","-","keys","includes","keyDown","components_DoMath","onMouseLeave","clientX","clientY","contextMenu","_map","_map2","imageX","imageY","mouseClick","onMouseDown","mouseDown","onMouseUp","onMouseMove","mouseMove","components_Images","MenuListProps","disablePadding","anchorPosition","anchorReference","closeMenu","_map5","_map6","menuButtonClick","fav","arguments","deltaY","newScale","_map3","_map4","centerScale","modifier","newTile","tile","tileX","tileY","centerX","window","screen","centerY","createMuiTheme","palette","useNextVariants","App","core_styles","pages_Main","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19f7ac0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.d4bd4642.png\";","import React from 'react';\n\nconst Images = ({ selectedMap, image }) => {\n    const info = mapInfo(selectedMap);\n    return (\n        <div onDragStart={e => e.preventDefault()}>\n            {(() => {\n                const arr = [];\n                for (let i = 0; i < info.nW; i++) {\n                    for (let g = 0; g < info.nH; g++) {\n                        arr.push(`${i},${g}`);\n                    }\n                }\n                return arr;\n            })().map(url => {\n                return <img className={image} key={url} alt={url} src={`${info.url}/${url}.png`} />;\n            })}\n        </div>\n    );\n    function mapInfo(selectedMap) {\n        const info = {\n            cogmap1: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap/z1`,\n            },\n            cogmap2: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap2/z1`,\n            },\n            faintSignal: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap2/z3`,\n            },\n            oshan: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/oshan/z1`,\n            },\n            clarion: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/clarion/z1`,\n            },\n        };\n        return info[selectedMap];\n    }\n};\n\nexport default Images;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Collapse, IconButton } from '@material-ui/core';\nimport { KeyboardArrowDown as Arrow } from '@material-ui/icons';\n\nconst styles = theme => ({\n    main: {\n        // Height of button that's being translated\n        marginTop: -48 + theme.spacing.unit,\n    },\n    line: {\n        fontSize: theme.typography.caption.fontSize,\n    },\n    list: {\n        maxHeight: '297px',\n        overflow: 'auto',\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerText: {\n        marginLeft: theme.spacing.unit * 2,\n    },\n});\n\nconst Locations = props => {\n    const { classes, math } = props;\n    const [collapseIn, collapse] = useState(false);\n    return (\n        <Paper className={classes.main}>\n            <Typography\n                onClick={() => collapse(!collapseIn)}\n                align=\"center\"\n                variant=\"overline\"\n                className={classes.headerText}\n            >\n                expedition locations\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\n                    <Arrow />\n                </IconButton>\n            </Typography>\n            <Collapse in={collapseIn}>\n                <Typography component=\"div\" variant=\"body2\" className={classes.list}>\n                    <ul>\n                        {[\n                            { name: 'meat station', location: [209, 23] },\n                            { name: 'sun observatory', location: [99, 85] },\n                            { name: 'lava moon', location: [88, 106] },\n                            { name: 'mars', location: [191, 135] },\n                            { name: 'ice moon', location: [15, 150] },\n                            { name: 'biodome', location: [120, 164] },\n                            { name: 'unknown', location: [131, 212] },\n                            { name: 'unknown', location: [236, 223] },\n                        ].map(loc => {\n                            const [xModifier, yModifier] = math.modifiers;\n                            const [xDivisor, yDivisor] = math.divisors;\n                            loc.location[0] = loc.location[0] / xDivisor + xModifier;\n                            loc.location[1] = loc.location[1] / yDivisor + yModifier;\n                            return (\n                                <li key={`${loc.name}_${loc.location.toString()}`}>\n                                    <p className={classes.line}>{loc.name.toUpperCase()}</p>\n                                    {`X: ${loc.location[0]}, Y: ${loc.location[1]}`}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </Typography>\n            </Collapse>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(Locations);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, MenuItem, Paper } from '@material-ui/core';\n\nconst styles = theme => ({\n    paper: {\n        position: 'relative',\n        marginTop: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    textField: {\n        margin: theme.spacing.unit,\n        width: `calc(100% - ${theme.spacing.unit * 2}px)`,\n    },\n});\n\nconst MapSelect = props => {\n    const { classes, selectMap, selectedMap } = props;\n    return (\n        <Paper className={classes.paper}>\n            <TextField\n                InputProps={{ inputProps: { tabIndex: -1 } }}\n                className={classes.textField}\n                select\n                label=\"Select Map\"\n                value={selectedMap}\n                onChange={e => {\n                    let val = e.target.value;\n                    selectMap(val);\n                }}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n            >\n                <MenuItem value=\"cogmap1\">Cogmap 1</MenuItem>\n                <MenuItem value=\"cogmap2\">Cogmap 2</MenuItem>\n                <MenuItem value=\"faintSignal\">Debris Field</MenuItem>\n                <MenuItem value=\"oshan\">Oshan</MenuItem>\n                <MenuItem value=\"clarion\">Clarion</MenuItem>\n            </TextField>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(MapSelect);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Collapse, List, ListItem, Paper, Typography, IconButton, TextField, InputAdornment } from '@material-ui/core';\nimport { KeyboardArrowDown as Arrow, Close, MyLocation } from '@material-ui/icons';\n\nconst styles = theme => ({\n    paper: {\n        position: 'relative',\n        marginTop: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit,\n    },\n    headerText: {\n        marginRight: theme.spacing.unit * 6,\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n});\n\nconst FavoritesMenu = props => {\n    const { classes, centerCoords, zoom, favorites, modFavorites, math } = props;\n    const [collapseIn, handleCollapse] = useState(false);\n    const [permaCollapse, doPermaCollapse] = useState(false);\n\n    useEffect(\n        () => {\n            if (favorites.length === 1 && !collapseIn && !permaCollapse) handleCollapse(true);\n        },\n        [props]\n    );\n\n    return (\n        <Paper className={classes.paper}>\n            <Typography\n                className={classes.headerText}\n                aria-owns={collapseIn ? 'favorites-menu' : undefined}\n                aria-haspopup=\"true\"\n                variant=\"overline\"\n                align=\"center\"\n                onClick={() => {\n                    if (!favorites.length) return handleCollapse(false);\n                    else {\n                        doPermaCollapse(true);\n                        return handleCollapse(!collapseIn);\n                    }\n                }}\n            >\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\n                    <Arrow />\n                </IconButton>\n                Favorites\n            </Typography>\n            <Collapse in={collapseIn}>\n                <List id=\"favorites-menu\">\n                    {favorites.map((each, index) => {\n                        return (\n                            <ListItem\n                                key={`${each.location}_key`}\n                                onContextMenu={e => listItemClick(e, each, `${each.name}_${each.location.toString()}`)}\n                            >\n                                <TextField\n                                    value={each.name}\n                                    onChange={e => {\n                                        let val = e.target.value;\n                                        modFavorites(favorites => {\n                                            favorites[index].name = val;\n                                            return favorites;\n                                        });\n                                    }}\n                                    FormHelperTextProps={{ style: { textAlign: 'center' } }}\n                                    helperText={`Real: [${each.location.toString()}] ----- Console: [${each\n                                        .location[0] /\n                                        math.divisors[0] +\n                                        math.modifiers[0]},${each.location[1] / math.divisors[1] + math.modifiers[1]}]`}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <IconButton onClick={e => listItemClick(e, each)} aria-label=\"go to\">\n                                                    <MyLocation />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    onClick={() => {\n                                                        if (favorites.length === 1) handleCollapse(false);\n                                                        modFavorites(favs => favs.filter(items => items !== each));\n                                                    }}\n                                                    aria-label=\"delete\"\n                                                >\n                                                    <Close />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Collapse>\n        </Paper>\n    );\n    function listItemClick(e, each, id) {\n        // 'click' || 'contextmenu'\n        if (e.type === 'contextmenu') {\n            e.preventDefault();\n            return;\n        } else {\n            centerCoords(zoom, [0, 0], each.location);\n        }\n    }\n};\n\nexport default withStyles(styles)(FavoritesMenu);\n","import React from 'react';\n\nconst HelperText = () => {\n    return (\n        <div>\n            <p>\n                Fill in the relevant fields under \"DO TELESCIENCE MATH\". The website will handle the math for you, and\n                your new console coordinates will be shown under \"CONSOLE COORDINATES\"\n            </p>\n            <p>When you're done, you can close the math table by clicking the \"DO TELESCIENCE MATH\" header.</p>\n            <p>\n                If you want to center the screen on custom coordinates, input any coordinate you want under the \"REAL\n                COORDINATES\" table, then click the center button icon, inbetween the two rows.\n            </p>\n            <p>\n                You can move the tile selector by keyboard as long as the mouse is not in the control panel. Try WASD,\n                Arrow Keys, or Numpad. Numpad 5 will center screen\n            </p>\n            <p>\n                Click the \"EXPEDITION LOCATIONS\" header for a list of telescience expedition locations, their values\n                will already have the math applied to them.\n            </p>\n            <p>\n                Right click anywhere on the map to add a favorite. You can quick go-to it or remove it from the\n                favorites menu\n            </p>\n        </div>\n    );\n};\n\nexport default HelperText;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Paper,\n    Collapse,\n    TextField,\n    InputAdornment,\n    Typography,\n    IconButton,\n    Popover,\n    Button,\n} from '@material-ui/core';\nimport { Help, KeyboardArrowDown as Arrow, VerticalAlignCenter as GoTo } from '@material-ui/icons';\nimport Locations from './Locations';\nimport MapSelect from './MapSelect';\nimport FavoritesMenu from './FavoritesMenu';\nimport HelperText from './HelperText';\n\nconst styles = theme => ({\n    textField: {\n        width: 75,\n    },\n    main: {\n        zIndex: 2,\n        position: 'fixed',\n        marginLeft: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 257,\n    },\n    resultsPos: {\n        zIndex: 2,\n        position: 'relative',\n        marginTop: theme.spacing.unit,\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerText: {\n        marginLeft: theme.spacing.unit * 2,\n    },\n    popOver: {\n        marginLeft: theme.spacing.unit,\n    },\n    popOverText: {\n        margin: theme.spacing.unit,\n        maxWidth: 257 + theme.spacing.unit * 5,\n    },\n    goto: {\n        zIndex: 2,\n        transform: 'translate(102px, -127px)',\n    },\n    rightPanel: {\n        position: 'absolute',\n        zIndex: 2,\n        top: 0,\n        right: 0,\n        width: 300,\n    },\n});\n\nconst DoMath = props => {\n    const { classes, selectedTile, centerCoords, selectMap, selectedMap, zoom, favorites, modFavorites } = props;\n    const [anchorEl, doAnchor] = useState(null);\n    const [gpsValues, setValue] = useState({ input: [100, 50], actualX: [6, 7], actualY: [49, 51] });\n    const [mathIn, toggleMath] = useState(true);\n    const xDivisor = gpsValues.actualX[1] - gpsValues.actualX[0],\n        yDivisor = gpsValues.actualY[1] - gpsValues.actualY[0],\n        xModifier = gpsValues.input[0] - gpsValues.actualX[0] / xDivisor,\n        yModifier = gpsValues.input[1] - gpsValues.actualY[0] / yDivisor;\n\n    return (\n        <>\n            <div className={classes.main}>\n                <Paper>\n                    <Typography\n                        className={classes.headerText}\n                        onClick={() => toggleMath(!mathIn)}\n                        variant=\"overline\"\n                        align=\"center\"\n                        id=\"tableTitle\"\n                    >\n                        Do telescience math\n                        <IconButton disabled className={mathIn ? classes.arrow : classes.arrowShift}>\n                            <Arrow />\n                        </IconButton>\n                    </Typography>\n                    <Collapse in={mathIn}>\n                        <Table padding=\"dense\">\n                            <TableHead>\n                                {/* HEADER */}\n                                <TableRow>\n                                    <TableCell align=\"center\">Console coord</TableCell>\n                                    <TableCell align=\"center\">GPS coord</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {/* CONSOLE X1 // ACTUAL X1 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'input', 0)}\n                                            value={gpsValues.input[0]}\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">X1</InputAdornment>,\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualX', 0)}\n                                            value={gpsValues.actualX[0]}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE Y1 // ACTUAL Y1 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'input', 1)}\n                                            value={gpsValues.input[1]}\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">Y1</InputAdornment>,\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualY', 0)}\n                                            value={gpsValues.actualY[0]}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE X2 // ACTUAL X2 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            key=\"gpsX1\"\n                                            value={gpsValues.input[0] + 1}\n                                            disabled\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">X2</InputAdornment>,\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualX', 1)}\n                                            value={gpsValues.actualX[1]}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE Y2 // ACTUAL Y2 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            value={gpsValues.input[1] + 1}\n                                            disabled\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">Y2</InputAdornment>,\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualY', 1)}\n                                            value={gpsValues.actualY[1]}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Collapse>\n                </Paper>\n                <Paper className={classes.resultsPos}>\n                    <Typography\n                        className={classes.headerText}\n                        variant=\"overline\"\n                        align=\"center\"\n                        id=\"tableTitle\"\n                        onClick={event => {\n                            let val = event.currentTarget;\n                            doAnchor(val);\n                        }}\n                    >\n                        Real Coordinates\n                        <IconButton disabled>\n                            <Help />\n                        </IconButton>\n                    </Typography>\n                    <Table padding=\"dense\">\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={selectedTile[0]}\n                                        onChange={e => {\n                                            let val = parseInt(e.target.value);\n                                            if (!val) val = 0;\n                                            props.transform(prev => {\n                                                prev.selectedTile[0] = val;\n                                                return prev;\n                                            });\n                                        }}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={selectedTile[1]}\n                                        onChange={e => {\n                                            let val = parseInt(e.target.value);\n                                            if (!val) val = 0;\n                                            props.transform(prev => {\n                                                prev.selectedTile[1] = val;\n                                                return prev;\n                                            });\n                                        }}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Typography variant=\"overline\" align=\"center\">\n                        Console Coordinates\n                    </Typography>\n                    <Table padding=\"dense\">\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        disabled\n                                        className={classes.textField}\n                                        value={selectedTile[0] / xDivisor + xModifier}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        disabled\n                                        className={classes.textField}\n                                        value={selectedTile[1] / yDivisor + yModifier}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Popover\n                    className={classes.popOver}\n                    aria-label=\"Math help\"\n                    id=\"math-tips\"\n                    open={Boolean(anchorEl)}\n                    anchorEl={anchorEl}\n                    onClose={() => doAnchor(null)}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <Typography align=\"center\" variant=\"caption\" className={classes.popOverText}>\n                        Stuck? Check the SS13 wiki on\n                        <Button\n                            size=\"small\"\n                            href=\"https://wiki.ss13.co/Telescience#Decoding_the_teleporter\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            decoding the teleporter\n                        </Button>\n                        <HelperText />\n                    </Typography>\n                </Popover>\n                <IconButton\n                    tabIndex={-1}\n                    className={classes.goto}\n                    onClick={() => {\n                        // Want this to center the screen on the coordinates, and set the zoom level\n                        return centerCoords();\n                    }}\n                >\n                    <GoTo />\n                </IconButton>\n                <Locations math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier] }} />\n            </div>\n            <div className={classes.rightPanel}>\n                <MapSelect selectMap={selectMap} selectedMap={selectedMap} />\n                <FavoritesMenu\n                    zoom={zoom}\n                    centerCoords={centerCoords}\n                    favorites={favorites}\n                    modFavorites={modFavorites}\n                    math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier] }}\n                />\n            </div>\n        </>\n    );\n    function update(e, target, index) {\n        let val = parseInt(e.target.value);\n        if (!val) val = 0;\n        setValue(prev => {\n            prev[target][index] = val;\n            return prev;\n        });\n    }\n};\n\nexport default withStyles(styles)(DoMath);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Menu, Button } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\nimport spaceTile from '../space.png';\nimport Images from '../components/Images';\nimport DoMath from '../components/DoMath';\n\nconst styles = theme => ({\n    main: {\n        backgroundImage: `url(${spaceTile})`,\n        display: 'block',\n        width: 1200 * 8,\n        height: 1200 * 8,\n    },\n    image: {\n        verticalAlign: 'middle',\n        width: 1200,\n        height: 1200,\n    },\n    noClick: {\n        userSelect: 'none',\n    },\n});\n\nconst Main = props => {\n    const { classes } = props;\n    const [tf, transform] = useState({\n        initial: [0, 0],\n        mouse: [0, 0],\n        pos: [-1300, -1300],\n        selectedTile: [137, 146],\n    });\n    const [zoom, setZoom] = useState(5);\n    const scale = zoom / 10;\n    const [mousedown, clickDown] = useState(false);\n    const [focussed, focus] = useState(false);\n    const [menu, doMenu] = useState({ mouse: [0, 0], target: null, removeTarget: null });\n    const [selectedMap, selectMap] = useState('cogmap1');\n    const [favorites, modFavorites] = useState([]);\n\n    const iStyles = {\n        divStyle: {\n            transformOrigin: `0 0`,\n            transform: `translate3D(${tf.pos[0]}px, ${tf.pos[1]}px, 0) scale(${scale})`,\n        },\n        selectorStyle: {\n            zIndex: 1,\n            position: 'absolute',\n            left: (tf.selectedTile[0] - 1) * 32 * scale + tf.pos[0],\n            top: -(tf.selectedTile[1] - 300) * 32 * scale + tf.pos[1],\n        },\n        oceanMan: {\n            zIndex: 2,\n            position: 'absolute',\n            left: 149 * 32 * scale + tf.pos[0],\n            top: 150 * 32 * scale + tf.pos[1],\n            width: 32 * scale,\n            height: 32 * scale,\n        },\n    };\n    const Svg = props => (\n        <svg\n            onClick={props.onClick}\n            onWheel={e => mouseWheel(e)}\n            onMouseEnter={() => focus(true)}\n            onContextMenu={e => e.preventDefault()}\n            className={classes.noClick}\n            width={32 * scale}\n            height={32 * scale}\n            style={props.style}\n        >\n            <rect\n                width={`${32 * scale}px`}\n                height={`${32 * scale}px`}\n                stroke={props.color}\n                fill=\"transparent\"\n                strokeWidth=\"4\"\n            />\n        </svg>\n    );\n\n    return (\n        <div className={classes.noClick} onKeyDown={e => keyDown(e)} tabIndex={0}>\n            {selectedMap === 'oshan' && (\n                <a\n                    style={{ color: 'inherit' }}\n                    href=\"https://www.youtube.com/watch?v=6E5m_XtCX3c\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <Info style={iStyles.oceanMan} />\n                </a>\n            )}\n            <DoMath\n                selectedTile={tf.selectedTile}\n                transform={transform}\n                centerCoords={centerCoords}\n                selectMap={selectMap}\n                selectedMap={selectedMap}\n                zoom={zoom}\n                favorites={favorites}\n                modFavorites={modFavorites}\n            />\n            <div\n                className={classes.main}\n                style={iStyles.divStyle}\n                onMouseLeave={() => {\n                    clickDown(false);\n                    focus(false);\n                }}\n                onMouseEnter={() => focus(true)}\n                onContextMenu={e => contextMenu(e)}\n                onClick={e => mouseClick(e)}\n                onMouseDown={e => mouseDown(e)}\n                onMouseUp={() => clickDown(false)}\n                onMouseMove={e => mouseMove(e)}\n                onWheel={e => mouseWheel(e)}\n            >\n                <Images image={`${classes.image} ${classes.noClick}`} selectedMap={selectedMap} />\n            </div>\n            <Svg\n                color=\"white\"\n                style={iStyles.selectorStyle}\n                onClick={() =>\n                    transform(tf => {\n                        tf.selectedTile = [1, 1];\n                        return tf;\n                    })\n                }\n            />\n            <Menu\n                MenuListProps={{ disablePadding: true }}\n                open={Boolean(menu.target)}\n                anchorEl={menu.target}\n                anchorPosition={{ top: menu.mouse[1], left: menu.mouse[0] }}\n                anchorReference={'anchorPosition'}\n                onContextMenu={e => {\n                    e.preventDefault();\n                    closeMenu();\n                }}\n                onClose={() => closeMenu()}\n            >\n                <Button size=\"small\" onClick={e => menuButtonClick(e)}>\n                    favorite\n                </Button>\n            </Menu>\n            {favorites.length > 0 &&\n                favorites.map(fav => {\n                    return (\n                        <div\n                            key={`${fav.location.toString()}_SVG`}\n                            onContextMenu={e => {\n                                const { target, clientX, clientY } = e;\n                                doMenu(prev => {\n                                    prev.removeTarget = target;\n                                    prev.mouse = [clientX, clientY];\n                                    return prev;\n                                });\n                            }}\n                        >\n                            <Svg\n                                color=\"#39FF14\"\n                                style={{\n                                    zIndex: 1,\n                                    position: 'fixed',\n                                    left: (fav.location[0] - 1) * 32 * scale + tf.pos[0],\n                                    top: -(fav.location[1] - 300) * 32 * scale + tf.pos[1],\n                                }}\n                            />\n                        </div>\n                    );\n                })}\n        </div>\n    );\n\n    function mouseClick(e) {\n        const { clientX, clientY } = e;\n        if (tf.mouse[0] !== clientX || tf.mouse[1] !== clientY) return;\n        const [imageX, imageY] = [clientX - tf.pos[0], clientY - tf.pos[1]].map(i => i / scale);\n        transform(tf => {\n            tf.selectedTile = [1 + (imageX - (imageX % 32)) / 32, 300 - (imageY - (imageY % 32)) / 32];\n            return tf;\n        });\n    }\n\n    function mouseDown(e) {\n        clickDown(true);\n        const { clientX, clientY } = e;\n        return transform(tf => {\n            tf.mouse = [clientX, clientY];\n            tf.initial = [clientX - tf.pos[0], clientY - tf.pos[1]];\n            return tf;\n        });\n    }\n\n    function mouseMove(e) {\n        if (!mousedown) return;\n        const { clientX, clientY } = e;\n        return transform(tf => {\n            tf.pos = [clientX - tf.initial[0], clientY - tf.initial[1]];\n            return tf;\n        });\n    }\n\n    function mouseWheel(e, val = 1) {\n        if (mousedown) return;\n        let { deltaY, clientX, clientY } = e;\n        if (deltaY > 0) {\n            if (zoom === 2) return;\n            setZoom(zoom - val);\n        } else {\n            if (zoom === 15) return;\n            setZoom(zoom + val);\n        }\n        return transform(tf => {\n            const newScale = (deltaY > 0 ? zoom - val : zoom + val) / 10;\n            const [imageX, imageY] = [clientX - tf.pos[0], clientY - tf.pos[1]].map(i => i / scale);\n            tf.pos[0] = -imageX * newScale + clientX;\n            tf.pos[1] = -imageY * newScale + clientY;\n            return tf;\n        });\n    }\n\n    function centerCoords(centerScale = 12, modifier = [0, 0], newTile) {\n        const tile = newTile ? newTile : tf.selectedTile;\n        // Default to max 1.2 scale, optional arg to change this\n        setZoom(centerScale);\n        const newScale = centerScale / 10;\n        const [tileX, tileY] = [\n            (tile[0] - 1 + modifier[0]) * 32 * newScale,\n            -(tile[1] - 303 + modifier[1]) * 32 * newScale,\n        ];\n        const [centerX, centerY] = [window.screen.width / 2, window.screen.height / 2];\n        return transform(tf => {\n            tf.pos[0] = -tileX + centerX;\n            tf.pos[1] = -tileY + centerY;\n            return tf;\n        });\n    }\n\n    function keyDown(e) {\n        if (!focussed) return;\n        let { key } = e;\n        if (key === '5' || key === ' ') return centerCoords(zoom);\n        let acceptableKeys = {\n            w: [0, 1],\n            a: [-1, 0],\n            s: [0, -1],\n            d: [1, 0],\n            ArrowUp: [0, 1],\n            ArrowLeft: [-1, 0],\n            ArrowDown: [0, -1],\n            ArrowRight: [1, 0],\n            '1': [-1, -1],\n            '2': [0, -1],\n            '3': [1, -1],\n            '4': [-1, 0],\n            '6': [1, 0],\n            '7': [-1, 1],\n            '8': [0, 1],\n            '9': [1, 1],\n            '+': 2,\n            '-': -2,\n        };\n        if (!Object.keys(acceptableKeys).includes(key)) return;\n        else {\n            const val = acceptableKeys[key];\n            if (key === '+' || key === '-') {\n                if (key === '+' && zoom >= 15) return;\n                if (key === '-' && zoom <= 3) return;\n                setZoom(zoom + val);\n                return centerCoords(zoom + val);\n            }\n            centerCoords(zoom, val);\n            return transform(tf => {\n                tf.selectedTile[0] += val[0];\n                tf.selectedTile[1] += val[1];\n                return tf;\n            });\n        }\n    }\n\n    function contextMenu(e) {\n        e.preventDefault();\n        const { clientX, clientY, target } = e;\n        doMenu(prev => {\n            prev.target = target;\n            prev.mouse = [clientX, clientY];\n            return prev;\n        });\n    }\n\n    function menuButtonClick(e) {\n        closeMenu();\n        const [imageX, imageY] = [menu.mouse[0] - tf.pos[0], menu.mouse[1] - tf.pos[1]].map(i => i / scale);\n        // Add to favorites here\n        modFavorites(prev => {\n            prev.push({\n                name: `Favorite # ${prev.length + 1}`,\n                location: [1 + (imageX - (imageX % 32)) / 32, 300 - (imageY - (imageY % 32)) / 32],\n            });\n            return prev;\n        });\n    }\n\n    function closeMenu() {\n        doMenu(prev => {\n            prev.target = null;\n            prev.removeTarget = null;\n            return prev;\n        });\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './pages/Main';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nconst App = props => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Main />\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}