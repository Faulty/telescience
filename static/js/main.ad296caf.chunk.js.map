{"version":3,"sources":["space.png","components/Images.js","components/Locations.js","components/MapSelect.js","components/FavoritesMenu.js","components/HelperText.js","components/Overlay.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Images","_ref","selectedMap","image","info","cogmap1","nW","nH","url","cogmap2","faintSignal","oshan","clarion","destiny","samedi","mapInfo","react_default","a","createElement","onDragStart","e","preventDefault","arr","i","g","push","concat","map","className","key","alt","src","withStyles","theme","main","marginTop","spacing","unit","line","fontSize","typography","caption","list","maxHeight","overflow","arrow","transition","transitions","create","easing","sharp","duration","enteringScreen","arrowShift","transform","headerText","marginLeft","props","classes","math","_useState","useState","_useState2","Object","slicedToArray","collapseIn","collapse","index_es","onClick","align","variant","disabled","icons_index_es","in","component","name","location","loc","_math$modifiers","modifiers","xModifier","yModifier","_math$divisors","divisors","xDivisor","yDivisor","toString","toUpperCase","paper","position","marginRight","textField","margin","width","selectMap","InputProps","inputProps","tabIndex","select","label","value","onChange","val","target","SelectProps","MenuProps","menu","listHeight","overflowY","centerCoords","zoom","favorites","modFavorites","handleCollapse","_useState3","_useState4","permaCollapse","doPermaCollapse","useEffect","length","aria-owns","undefined","aria-haspopup","id","each","index","FormHelperTextProps","style","textAlign","helperText","startAdornment","aria-label","endAdornment","favs","filter","items","HelperText","Fragment","zIndex","resultsPos","popOver","popOverText","maxWidth","goto","rightPanel","top","right","selectedTile","anchorEl","doAnchor","mathIn","toggleMath","_useState5","input","actualX","actualY","_useState6","gpsValues","setValue","padding","update","event","currentTarget","parseInt","prev","open","Boolean","onClose","anchorOrigin","vertical","horizontal","color","size","href","rel","components_HelperText","components_Locations","components_MapSelect","components_FavoritesMenu","backgroundImage","spaceTile","display","height","verticalAlign","imageUnclicked","cursor","imageClicked","noClick","userSelect","initial","mouse","pos","tf","_useState7","_useState8","setZoom","scale","_useState9","_useState10","mousedown","clickDown","_useState11","_useState12","focussed","focus","_useState13","_useState14","doMenu","data","localStorage","getItem","JSON","parse","localKeys","keys","stateKeys","stringify","missingKey","oKey","includes","extraKey","forEach","obj","objectSpread","pop","apply","toConsumableArray","getStorage","setItem","iStyles","divStyle","transformOrigin","selectorStyle","tilePosition","onKeyDown","altKey","acceptableKeys","w","s","d","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","1","2","3","4","6","7","8","9","+","-","keyDown","_len","arguments","args","Array","_key","link","easterEggPos","easterEgg","components_Overlay","onMouseLeave","onMouseEnter","onContextMenu","contextMenu","clientX","clientY","tileMath","imgCoords","onMouseDown","onMouseUp","onMouseMove","onWheel","mouseWheel","components_Images","fav","stopPropagation","stroke","fill","strokeWidth","defineProperty","mouseDown","MenuListProps","disablePadding","anchorPosition","left","anchorReference","closeMenu","x","y","_x","_x2","funcScale","deltaY","newScale","_imgCoords","_imgCoords2","imageX","imageY","centerScale","modifier","newTile","tile","tileX","tileY","centerX","window","screen","centerY","createMuiTheme","palette","type","useNextVariants","App","core_styles","pages_Main","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad296caf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.d4bd4642.png\";","import React from 'react';\n\nconst Images = ({ selectedMap, image }) => {\n    const info = mapInfo(selectedMap);\n    return (\n        <div onDragStart={e => e.preventDefault()}>\n            {(() => {\n                const arr = [];\n                for (let i = 0; i < info.nW; i++) {\n                    for (let g = 0; g < info.nH; g++) {\n                        arr.push(`${i},${g}`);\n                    }\n                }\n                return arr;\n            })().map(url => {\n                return <img className={image} key={url} alt={url} src={`${info.url}/${url}.png`} />;\n            })}\n        </div>\n    );\n    function mapInfo(selectedMap) {\n        const info = {\n            cogmap1: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap/z1`,\n            },\n            cogmap2: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap2/z1`,\n            },\n            faintSignal: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap2/z3`,\n            },\n            oshan: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/oshan/z1`,\n            },\n            clarion: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/clarion/z1`,\n            },\n            destiny: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/destiny/z1`,\n            },\n            samedi: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/samedi/z1`,\n            },\n        };\n        return info[selectedMap];\n    }\n};\n\nexport default Images;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Collapse, IconButton } from '@material-ui/core';\nimport { KeyboardArrowDown as Arrow } from '@material-ui/icons';\n\nconst styles = theme => ({\n    main: {\n        // Height of button that's being translated\n        marginTop: -48 + theme.spacing.unit,\n    },\n    line: {\n        fontSize: theme.typography.caption.fontSize,\n    },\n    list: {\n        maxHeight: '297px',\n        overflow: 'auto',\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerText: {\n        marginLeft: theme.spacing.unit * 2,\n    },\n});\n\nconst Locations = props => {\n    const { classes, math } = props;\n    const [collapseIn, collapse] = useState(false);\n    return (\n        <Paper className={classes.main}>\n            <Typography\n                onClick={() => collapse(!collapseIn)}\n                align=\"center\"\n                variant=\"overline\"\n                className={classes.headerText}\n            >\n                expedition locations\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\n                    <Arrow />\n                </IconButton>\n            </Typography>\n            <Collapse in={collapseIn}>\n                <Typography component=\"div\" variant=\"body2\" className={classes.list}>\n                    <ul>\n                        {[\n                            { name: 'meat station', location: [209, 23] },\n                            { name: 'solar observatory', location: [99, 85] },\n                            { name: 'lava moon', location: [88, 106] },\n                            { name: 'mars', location: [191, 135] },\n                            { name: 'ice moon', location: [15, 150] },\n                            { name: 'biodome', location: [120, 164] },\n                            { name: 'unknown', location: [131, 212] },\n                            { name: 'unknown', location: [236, 223] },\n                        ].map(loc => {\n                            const [xModifier, yModifier] = math.modifiers;\n                            const [xDivisor, yDivisor] = math.divisors;\n                            loc.location[0] = loc.location[0] / xDivisor + xModifier;\n                            loc.location[1] = loc.location[1] / yDivisor + yModifier;\n                            return (\n                                <li key={`${loc.name}_${loc.location.toString()}`}>\n                                    <p className={classes.line}>{loc.name.toUpperCase()}</p>\n                                    {`X: ${loc.location[0]}, Y: ${loc.location[1]}`}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </Typography>\n            </Collapse>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(Locations);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, MenuItem, Paper } from '@material-ui/core';\n\nconst styles = theme => ({\n    paper: {\n        position: 'relative',\n        marginTop: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    textField: {\n        margin: theme.spacing.unit,\n        width: `calc(100% - ${theme.spacing.unit * 2}px)`,\n    },\n});\n\nconst MapSelect = props => {\n    const { classes, selectMap, selectedMap } = props;\n    return (\n        <Paper className={classes.paper}>\n            <TextField\n                InputProps={{ inputProps: { tabIndex: -1 } }}\n                className={classes.textField}\n                select\n                label=\"Select Map\"\n                value={selectedMap}\n                onChange={e => {\n                    let val = e.target.value;\n                    return selectMap(val);\n                }}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n            >\n                <MenuItem value=\"cogmap1\">Cogmap 1</MenuItem>\n                <MenuItem value=\"cogmap2\">Cogmap 2</MenuItem>\n                <MenuItem value=\"faintSignal\">Debris Field</MenuItem>\n                <MenuItem value=\"oshan\">Oshan</MenuItem>\n                <MenuItem value=\"clarion\">Clarion</MenuItem>\n                <MenuItem value=\"destiny\">Destiny</MenuItem>\n                <MenuItem value=\"samedi\">Samedi</MenuItem>\n            </TextField>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(MapSelect);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Collapse, List, ListItem, Paper, Typography, IconButton, TextField, InputAdornment } from '@material-ui/core';\nimport { KeyboardArrowDown as Arrow, Close, MyLocation } from '@material-ui/icons';\n\nconst styles = theme => ({\n    paper: {\n        position: 'relative',\n        marginTop: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit,\n    },\n    headerText: {\n        marginRight: theme.spacing.unit * 6,\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    listHeight: {\n        maxHeight: 538 - 48 * 2 - theme.spacing.unit * 4,\n        overflowY: 'auto',\n    },\n});\n\nconst FavoritesMenu = props => {\n    const { classes, centerCoords, zoom, favorites, modFavorites, math, selectedMap } = props;\n    // This is to handle a sort of auto open, auto close thing\n    const [collapseIn, handleCollapse] = useState(false);\n    const [permaCollapse, doPermaCollapse] = useState(false);\n\n    useEffect(\n        () => {\n            if (favorites[selectedMap].length >= 1 && !collapseIn && !permaCollapse) return handleCollapse(true);\n            else if (favorites[selectedMap].length < 1) return handleCollapse(false);\n        },\n        [props]\n    );\n\n    return (\n        <Paper className={classes.paper}>\n            <Typography\n                className={classes.headerText}\n                aria-owns={collapseIn ? 'favorites-menu' : undefined}\n                aria-haspopup=\"true\"\n                variant=\"overline\"\n                align=\"center\"\n                onClick={() => {\n                    if (!favorites[selectedMap].length) return handleCollapse(false);\n                    else {\n                        doPermaCollapse(true);\n                        return handleCollapse(!collapseIn);\n                    }\n                }}\n            >\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\n                    <Arrow />\n                </IconButton>\n                Favorites\n            </Typography>\n            <Collapse in={collapseIn}>\n                <List id=\"favorites-menu\" className={classes.listHeight}>\n                    {favorites[selectedMap].map((each, index) => {\n                        return (\n                            <ListItem key={`${each.location}_key`}>\n                                <TextField\n                                    value={each.name}\n                                    onChange={e => {\n                                        let val = e.target.value;\n                                        return modFavorites(favorites => {\n                                            favorites[selectedMap][index].name = val;\n                                            return favorites;\n                                        });\n                                    }}\n                                    FormHelperTextProps={{ style: { textAlign: 'center' } }}\n                                    helperText={`Real: [${each.location.toString()}] ----- Console: [${each\n                                        .location[0] /\n                                        math.divisors[0] +\n                                        math.modifiers[0]},${each.location[1] / math.divisors[1] + math.modifiers[1]}]`}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <IconButton\n                                                    onClick={() => centerCoords(zoom, [0, 0], each.location)}\n                                                    aria-label=\"go to\"\n                                                >\n                                                    <MyLocation />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    onClick={() => {\n                                                        if (favorites.length === 1) handleCollapse(false);\n                                                        return modFavorites(favs => {\n                                                            favs[selectedMap] = favs[selectedMap].filter(\n                                                                items => items !== each\n                                                            );\n                                                            return favs;\n                                                        });\n                                                    }}\n                                                    aria-label=\"delete\"\n                                                >\n                                                    <Close />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Collapse>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(FavoritesMenu);\n","import React from 'react';\n\nconst HelperText = () => {\n    return (\n        <>\n            <p>\n                Fill in the relevant fields under \"DO TELESCIENCE MATH\". The website will handle the math for you, and\n                your new console coordinates will be shown under \"CONSOLE COORDINATES\"\n            </p>\n            <p>When you're done, you can close the math table by clicking the \"DO TELESCIENCE MATH\" header.</p>\n\n            <p>\n                You can move the tile selector by keyboard as long as the mouse is not in the control panel, and{' '}\n                <strong>ALT</strong> is held down. Try WASD, Arrow Keys, or Numpad. Numpad 5 will center screen\n            </p>\n            <p>\n                Click the \"EXPEDITION LOCATIONS\" header for a list of telescience expedition locations, their values\n                will already have the math applied to them.\n            </p>\n            <p>\n                Right click anywhere on the map to add a favorite. You can quick go-to it or remove it from the\n                favorites menu\n            </p>\n        </>\n    );\n};\n\nexport default HelperText;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Paper,\n    Collapse,\n    TextField,\n    InputAdornment,\n    Typography,\n    IconButton,\n    Popover,\n    Button,\n} from '@material-ui/core';\nimport { Help, KeyboardArrowDown as Arrow, VerticalAlignCenter as GoTo } from '@material-ui/icons';\nimport Locations from './Locations';\nimport MapSelect from './MapSelect';\nimport FavoritesMenu from './FavoritesMenu';\nimport HelperText from './HelperText';\n\nconst styles = theme => ({\n    textField: {\n        width: 75,\n    },\n    main: {\n        zIndex: 2,\n        position: 'fixed',\n        marginLeft: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 257,\n    },\n    resultsPos: {\n        zIndex: 2,\n        position: 'relative',\n        marginTop: theme.spacing.unit,\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerText: {\n        marginLeft: theme.spacing.unit * 2,\n    },\n    popOver: {\n        marginLeft: theme.spacing.unit,\n    },\n    popOverText: {\n        margin: theme.spacing.unit,\n        maxWidth: 257 + theme.spacing.unit * 30,\n    },\n    goto: {\n        zIndex: 2,\n        transform: 'translate(102px, -127px)',\n    },\n    rightPanel: {\n        position: 'absolute',\n        zIndex: 2,\n        top: 0,\n        right: 0,\n        width: 300,\n    },\n});\n\nconst Overlay = props => {\n    const { classes, selectedTile, centerCoords, selectMap, selectedMap, zoom, favorites, modFavorites } = props;\n    // anchorEl / doAnchor used for HelperText popover\n    const [anchorEl, doAnchor] = useState(null);\n    // mathIn / toggleMath used for math menu collapse\n    const [mathIn, toggleMath] = useState(true);\n    const [gpsValues, setValue] = useState({ input: [100, 50], actualX: [6, 7], actualY: [49, 51] });\n    const xDivisor = gpsValues.actualX[1] - gpsValues.actualX[0],\n        yDivisor = gpsValues.actualY[1] - gpsValues.actualY[0],\n        xModifier = gpsValues.input[0] - gpsValues.actualX[0] / xDivisor,\n        yModifier = gpsValues.input[1] - gpsValues.actualY[0] / yDivisor;\n\n    return (\n        <>\n            <div className={classes.main}>\n                <Paper>\n                    <Typography\n                        className={classes.headerText}\n                        onClick={() => toggleMath(!mathIn)}\n                        variant=\"overline\"\n                        align=\"center\"\n                        id=\"tableTitle\"\n                    >\n                        Do telescience math\n                        <IconButton disabled className={mathIn ? classes.arrow : classes.arrowShift}>\n                            <Arrow />\n                        </IconButton>\n                    </Typography>\n                    <Collapse in={mathIn}>\n                        <Table padding=\"dense\">\n                            <TableHead>\n                                {/* HEADER */}\n                                <TableRow>\n                                    <TableCell align=\"center\">Console coord</TableCell>\n                                    <TableCell align=\"center\">GPS coord</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {/* CONSOLE X1 // ACTUAL X1 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'input', 0)}\n                                            value={gpsValues.input[0]}\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">X1</InputAdornment>,\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualX', 0)}\n                                            value={gpsValues.actualX[0]}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE Y1 // ACTUAL Y1 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'input', 1)}\n                                            value={gpsValues.input[1]}\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">Y1</InputAdornment>,\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualY', 0)}\n                                            value={gpsValues.actualY[0]}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE X2 // ACTUAL X2 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            key=\"gpsX1\"\n                                            value={gpsValues.input[0] + 1}\n                                            disabled\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">X2</InputAdornment>,\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualX', 1)}\n                                            value={gpsValues.actualX[1]}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE Y2 // ACTUAL Y2 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            value={gpsValues.input[1] + 1}\n                                            disabled\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">Y2</InputAdornment>,\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualY', 1)}\n                                            value={gpsValues.actualY[1]}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Collapse>\n                </Paper>\n                <Paper className={classes.resultsPos}>\n                    <Typography\n                        className={classes.headerText}\n                        variant=\"overline\"\n                        align=\"center\"\n                        id=\"tableTitle\"\n                        onClick={event => {\n                            let val = event.currentTarget;\n                            doAnchor(val);\n                        }}\n                    >\n                        Real Coordinates\n                        <IconButton disabled>\n                            <Help />\n                        </IconButton>\n                    </Typography>\n                    <Table padding=\"dense\">\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={selectedTile[0]}\n                                        onChange={e => {\n                                            let val = parseInt(e.target.value);\n                                            if (!val) val = 0;\n                                            return props.transform(prev => {\n                                                prev.selectedTile[0] = val;\n                                                return prev;\n                                            });\n                                        }}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={selectedTile[1]}\n                                        onChange={e => {\n                                            let val = parseInt(e.target.value);\n                                            if (!val) val = 0;\n                                            return props.transform(prev => {\n                                                prev.selectedTile[1] = val;\n                                                return prev;\n                                            });\n                                        }}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Typography variant=\"overline\" align=\"center\">\n                        Console Coordinates\n                    </Typography>\n                    <Table padding=\"dense\">\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        disabled\n                                        className={classes.textField}\n                                        value={selectedTile[0] / xDivisor + xModifier}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        disabled\n                                        className={classes.textField}\n                                        value={selectedTile[1] / yDivisor + yModifier}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Popover\n                    className={classes.popOver}\n                    aria-label=\"Math help\"\n                    id=\"math-tips\"\n                    open={Boolean(anchorEl)}\n                    anchorEl={anchorEl}\n                    onClose={() => doAnchor(null)}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <Typography variant=\"caption\" className={classes.popOverText}>\n                        Stuck? Check the SS13 wiki on\n                        <Button\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            href=\"https://wiki.ss13.co/Telescience#Decoding_the_teleporter\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            decoding the teleporter\n                        </Button>\n                        <HelperText />\n                        <p>\n                            Need more info?{`\\t`}\n                            <Button\n                                color=\"secondary\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                href=\"https://github.com/Kayle7777/telescience\"\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                Click here\n                            </Button>\n                            {`\\t`}for a detailed readme.\n                        </p>\n                    </Typography>\n                </Popover>\n                <IconButton tabIndex={-1} className={classes.goto} onClick={() => centerCoords()}>\n                    <GoTo />\n                </IconButton>\n                <Locations math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier] }} />\n            </div>\n            <div className={classes.rightPanel}>\n                <MapSelect selectMap={selectMap} selectedMap={selectedMap} />\n                <FavoritesMenu\n                    zoom={zoom}\n                    centerCoords={centerCoords}\n                    favorites={favorites}\n                    selectedMap={selectedMap}\n                    modFavorites={modFavorites}\n                    math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier] }}\n                />\n            </div>\n        </>\n    );\n    function update(e, target, index) {\n        let val = parseInt(e.target.value);\n        if (!val) val = 0;\n        return setValue(prev => {\n            prev[target][index] = val;\n            return prev;\n        });\n    }\n};\n\nexport default withStyles(styles)(Overlay);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Menu, Button } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\nimport spaceTile from '../space.png';\nimport Images from '../components/Images';\nimport Overlay from '../components/Overlay';\n\nconst styles = theme => ({\n    main: {\n        backgroundImage: `url(${spaceTile})`,\n        display: 'block',\n        width: 1200 * 8,\n        height: 1200 * 8,\n    },\n    image: {\n        verticalAlign: 'middle',\n        width: 1200,\n        height: 1200,\n    },\n    imageUnclicked: {\n        cursor: 'grab',\n    },\n    imageClicked: {\n        cursor: 'grabbing',\n    },\n    noClick: {\n        userSelect: 'none',\n    },\n});\n\nconst Main = props => {\n    const { classes } = props;\n    // tf.mouse is used to determine if the mouse moved during onClick\n    const [tf, transform] = useState({\n        initial: [0, 0],\n        mouse: [0, 0],\n        pos: [-2200, -2000],\n        selectedTile: [139, 192],\n    });\n    const [selectedMap, selectMap] = useState('cogmap1');\n    const [favorites, modFavorites] = useState({\n        cogmap1: [\n            { name: 'Telescience', location: [112, 123] },\n            { name: 'AI core', location: [137, 146] },\n            { name: \"Captain's Locker\", location: [85, 166] },\n        ],\n        cogmap2: [{ name: 'Telescience', location: [104, 120] }, { name: 'AI core', location: [190, 220] }],\n        faintSignal: [{ name: 'RobustTec Implants', location: [266, 132] }, { name: 'Phaser', location: [285, 162] }],\n        oshan: [{ name: 'AI Core', location: [196, 160] }, { name: 'Telescience', location: [181, 174] }],\n        clarion: [{ name: 'AI Core', location: [133, 99] }, { name: 'Telescience', location: [153, 107] }],\n        destiny: [],\n        samedi: [],\n    });\n    const [zoom, setZoom] = useState(7);\n    const scale = zoom / 10;\n    // mousedown / clickDown used for wheel and mousemove events\n    const [mousedown, clickDown] = useState(false);\n    // focussed / focus used for keydown events.\n    const [focussed, focus] = useState(false);\n    // menu / doMenu used for menu events (obviously)\n    const [menu, doMenu] = useState({ mouse: [0, 0], target: null });\n\n    // Check for an existing localStorage item, if it is different than the existing state localStorage item, set it as the state.\n    useEffect(() => {\n        const data = getStorage();\n        if (data) modFavorites(data);\n    }, []);\n\n    // Set a new localStorage item every time a favorite is added or removed\n    useEffect(\n        () => {\n            setStorage(favorites);\n        },\n        [JSON.stringify(favorites)]\n    );\n\n    const iStyles = {\n        divStyle: {\n            transformOrigin: `0 0`,\n            transform: `translate3D(${tf.pos[0]}px, ${tf.pos[1]}px, 0) scale(${scale})`,\n        },\n        selectorStyle: {\n            zIndex: 1,\n            position: 'fixed',\n            ...tilePosition(tf.selectedTile),\n        },\n    };\n    const Svg = props => (\n        <svg\n            onClick={props.onClick}\n            onWheel={props.onWheel ? props.onWheel : mouseWheel}\n            onMouseDown={props.mouseDown}\n            onMouseEnter={() => focus(true)}\n            onContextMenu={props.onContextMenu ? props.onContextMenu : e => e.preventDefault()}\n            className={classes.noClick}\n            width={32 * scale}\n            height={32 * scale}\n            style={props.style}\n            className={classes.imageUnclicked}\n        >\n            <rect\n                width={`${32 * scale}px`}\n                height={`${32 * scale}px`}\n                stroke={props.color}\n                fill=\"transparent\"\n                strokeWidth=\"4\"\n            />\n        </svg>\n    );\n    return (\n        <div className={classes.noClick} onKeyDown={e => keyDown(e)} tabIndex={0}>\n            {selectedMap === 'oshan' &&\n                easterEgg(\n                    // Ocean man\n                    { link: 'https://www.youtube.com/watch?v=6E5m_XtCX3c', pos: [150, 150] },\n                    // Tiburón bebé\n                    { link: 'https://youtu.be/dJBD0F-1V00?t=21', pos: [3, 4], color: '#6D7373' }\n                )}\n            <Overlay\n                selectedTile={tf.selectedTile}\n                transform={transform}\n                centerCoords={centerCoords}\n                selectMap={selectMap}\n                selectedMap={selectedMap}\n                zoom={zoom}\n                favorites={favorites}\n                modFavorites={modFavorites}\n            />\n            <div\n                onMouseLeave={() => {\n                    clickDown(false);\n                    return focus(false);\n                }}\n                onMouseEnter={() => focus(true)}\n                onContextMenu={contextMenu}\n                onClick={mouseClick}\n                onMouseDown={mouseDown}\n                onMouseUp={() => clickDown(false)}\n                onMouseMove={mouseMove}\n                onWheel={mouseWheel}\n            >\n                <div className={classes.main} style={iStyles.divStyle}>\n                    <Images\n                        image={`${classes.image} ${classes.noClick} ${\n                            mousedown ? classes.imageClicked : classes.imageUnclicked\n                        }`}\n                        selectedMap={selectedMap}\n                    />\n                </div>\n                {favorites[selectedMap].length > 0 &&\n                    favorites[selectedMap].map(fav => {\n                        return (\n                            <svg\n                                key={`${fav.location.toString()}_SVG`}\n                                onContextMenu={e => {\n                                    e.stopPropagation();\n                                    e.preventDefault();\n                                    return modFavorites(prev => {\n                                        prev[selectedMap] = prev[selectedMap].filter(items => items !== fav);\n                                        return prev;\n                                    });\n                                }}\n                                style={{\n                                    zIndex: 1,\n                                    position: 'fixed',\n                                    ...tilePosition(fav.location),\n                                }}\n                                className={`${classes.noClick} ${classes.imageUnclicked}`}\n                                width={32 * scale}\n                                height={32 * scale}\n                            >\n                                <rect\n                                    width={`${32 * scale}px`}\n                                    height={`${32 * scale}px`}\n                                    stroke=\"#39FF14\"\n                                    fill=\"transparent\"\n                                    strokeWidth=\"4\"\n                                />\n                            </svg>\n                        );\n                    })}\n            </div>\n            <Svg\n                color=\"white\"\n                style={iStyles.selectorStyle}\n                onClick={() =>\n                    transform(tf => {\n                        tf.selectedTile = [1, 1];\n                        return tf;\n                    })\n                }\n                onContextMenu={contextMenu}\n            />\n            <Menu\n                MenuListProps={{ disablePadding: true }}\n                open={Boolean(menu.target)}\n                anchorEl={menu.target}\n                anchorPosition={{ top: menu.mouse[1], left: menu.mouse[0] }}\n                anchorReference={'anchorPosition'}\n                onContextMenu={e => {\n                    e.preventDefault();\n                    return closeMenu();\n                }}\n                onClose={() => closeMenu()}\n            >\n                <Button size=\"small\" onClick={menuButtonClick}>\n                    favorite\n                </Button>\n            </Menu>\n        </div>\n    );\n\n    // This is used to place each tile selector over the image container just as if it had the 300/300 grid the game does.\n    function tileMath(x, y) {\n        return [1 + (x - (x % 32)) / 32, 300 - (y - (y % 32)) / 32];\n    }\n\n    // This is used to position each tile selector correctly, this is the CSS value applied to its absolute position.\n    function tilePosition(x, y) {\n        if (!y && typeof x === 'object') [x, y] = x;\n        return {\n            left: (x - 1) * 32 * scale + tf.pos[0],\n            top: -(y - 300) * 32 * scale + tf.pos[1],\n        };\n    }\n\n    // This is used to find the absolute pixel value of where a user clicked. The positioning of the image needs to be\n    // subtracted from the X and Y value of a users click, and the scale needs to be removed to find this value.\n    function imgCoords(x, y, funcScale = scale, pos = tf.pos) {\n        return [x - pos[0], y - pos[1]].map(i => i / funcScale);\n    }\n\n    function mouseClick(e) {\n        const { clientX, clientY } = e;\n        // Detect if we moved\n        if (tf.mouse[0] !== clientX || tf.mouse[1] !== clientY) return;\n        return transform(tf => {\n            tf.selectedTile = tileMath(...imgCoords(clientX, clientY));\n            return tf;\n        });\n    }\n\n    function mouseDown(e) {\n        clickDown(true);\n        const { clientX, clientY } = e;\n        return transform(tf => {\n            tf.mouse = [clientX, clientY];\n            tf.initial = imgCoords(clientX, clientY, 1);\n            return tf;\n        });\n    }\n\n    function mouseMove(e) {\n        if (!mousedown) return;\n        const { clientX, clientY } = e;\n        return transform(tf => {\n            tf.pos = imgCoords(clientX, clientY, 1, tf.initial);\n            return tf;\n        });\n    }\n\n    function mouseWheel(e, val = 1) {\n        if (mousedown) return;\n        let { deltaY, clientX, clientY } = e;\n        if (deltaY > 0) {\n            if (zoom === 2) return;\n            setZoom(zoom - val);\n        } else {\n            if (zoom === 15) return;\n            setZoom(zoom + val);\n        }\n        return transform(tf => {\n            const newScale = (deltaY > 0 ? zoom - val : zoom + val) / 10;\n            const [imageX, imageY] = imgCoords(clientX, clientY);\n            tf.pos[0] = -imageX * newScale + clientX;\n            tf.pos[1] = -imageY * newScale + clientY;\n            return tf;\n        });\n    }\n\n    function centerCoords(centerScale = 12, modifier = [0, 0], newTile) {\n        const tile = newTile ? newTile : tf.selectedTile;\n        // Default to 1.2 scale, optional arg to change this\n        setZoom(centerScale);\n        const newScale = centerScale / 10;\n        const [tileX, tileY] = [\n            (tile[0] - 1 + modifier[0]) * 32 * newScale,\n            -(tile[1] - 303 + modifier[1]) * 32 * newScale,\n        ];\n        const [centerX, centerY] = [window.screen.width / 2, window.screen.height / 2];\n        return transform(tf => {\n            tf.pos[0] = -tileX + centerX;\n            tf.pos[1] = -tileY + centerY;\n            return tf;\n        });\n    }\n\n    function keyDown(e) {\n        if (!focussed) return;\n        let { key, altKey } = e;\n        if (!altKey) return;\n        if (key === '5' || key === ' ') return centerCoords(zoom);\n        let acceptableKeys = {\n            w: [0, 1],\n            a: [-1, 0],\n            s: [0, -1],\n            d: [1, 0],\n            ArrowUp: [0, 1],\n            ArrowLeft: [-1, 0],\n            ArrowDown: [0, -1],\n            ArrowRight: [1, 0],\n            '1': [-1, -1],\n            '2': [0, -1],\n            '3': [1, -1],\n            '4': [-1, 0],\n            '6': [1, 0],\n            '7': [-1, 1],\n            '8': [0, 1],\n            '9': [1, 1],\n            '+': 2,\n            '-': -2,\n        };\n        if (!Object.keys(acceptableKeys).includes(key)) return;\n        else {\n            const val = acceptableKeys[key];\n            if (key === '+' || key === '-') {\n                if (key === '+' && zoom >= 15) return;\n                if (key === '-' && zoom <= 3) return;\n                setZoom(zoom + val);\n                return centerCoords(zoom + val);\n            }\n            centerCoords(zoom, val);\n            return transform(tf => {\n                tf.selectedTile[0] += val[0];\n                tf.selectedTile[1] += val[1];\n                return tf;\n            });\n        }\n    }\n\n    function contextMenu(e) {\n        e.preventDefault();\n        const { clientX, clientY, target } = e;\n        return doMenu(prev => {\n            prev.target = target;\n            prev.mouse = [clientX, clientY];\n            return prev;\n        });\n    }\n\n    function menuButtonClick(e) {\n        closeMenu();\n        return modFavorites(prev => {\n            prev[selectedMap].push({\n                name: `Favorite #${prev[selectedMap].length + 1}`,\n                location: tileMath(...imgCoords(menu.mouse[0], menu.mouse[1])),\n            });\n            return prev;\n        });\n    }\n\n    function closeMenu() {\n        return doMenu(prev => {\n            prev.target = null;\n            return prev;\n        });\n    }\n\n    function setStorage(favs) {\n        if (typeof favs !== 'string') favs = JSON.stringify(favs);\n        localStorage.setItem('telescienceFavorites', favs);\n    }\n\n    function getStorage() {\n        let data = localStorage.getItem('telescienceFavorites');\n        if (!data) return false;\n        data = JSON.parse(data);\n        let localKeys = Object.keys(data),\n            stateKeys = Object.keys(favorites);\n        if (localKeys.length !== stateKeys.length || JSON.stringify(localKeys) !== JSON.stringify(stateKeys)) {\n            let missingKey = stateKeys.filter(oKey => !localKeys.includes(oKey));\n            let extraKey = localKeys.filter(oKey => !stateKeys.includes(oKey));\n            if (missingKey.length) {\n                missingKey.forEach(key => {\n                    let obj = {};\n                    obj[key] = favorites[key];\n                    data = { ...data, ...obj };\n                });\n            }\n            if (extraKey.length) {\n                extraKey.forEach(key => {\n                    let obj = {};\n                    localKeys.pop(...extraKey);\n                    localKeys.forEach(key => {\n                        obj[key] = data[key];\n                    });\n                    data = obj;\n                });\n            }\n        }\n        return data;\n    }\n\n    function easterEgg(...args) {\n        return (\n            <>\n                {args.map((info, i) => {\n                    if (!info.pos) info.pos = [150 + i, 151 + i];\n                    info.pos[0]--;\n                    info.pos[1] = 300 - info.pos[1];\n                    return (\n                        <a style={{ color: 'inherit' }} href={info.link} rel=\"noopener noreferrer\" target=\"_blank\">\n                            <Info style={{ ...easterEggPos(...info.pos), color: info.color }} />\n                        </a>\n                    );\n                })}\n            </>\n        );\n    }\n\n    function easterEggPos(x, y) {\n        return {\n            zIndex: 2,\n            position: 'absolute',\n            left: x * 32 * scale + tf.pos[0],\n            top: y * 32 * scale + tf.pos[1],\n            width: 32 * scale,\n            height: 32 * scale,\n        };\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './pages/Main';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nconst App = props => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Main />\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}