{"version":3,"sources":["space.png","components/Images.js","components/DoMath.js","components/MapSelect.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Images","_ref","selectedMap","image","info","cogmap1","nW","nH","url","cogmap2","faintSignal","oshan","clarion","mapInfo","react_default","a","createElement","Fragment","arr","i","g","push","concat","map","className","key","alt","src","withStyles","theme","textField","width","main","zIndex","position","marginLeft","spacing","unit","marginTop","maxWidth","resultsPos","props","classes","selectedTile","_useState","useState","input","actualX","actualY","_useState2","Object","slicedToArray","gpsValues","setValue","_useState3","_useState4","mathIn","toggleMath","xDivisor","yDivisor","xModifier","yModifier","index_es","in","collapsedHeight","onClick","variant","align","id","padding","onChange","e","update","value","InputProps","startAdornment","disabled","val","parseInt","target","transform","prev","index","paper","top","right","marginRight","margin","menu","selectMap","select","label","SelectProps","MenuProps","backgroundImage","spaceTile","display","verticalAlign","height","noClick","userSelect","WebkitUserDrag","initial","pos","tf","zoom","setZoom","scale","_useState5","_useState6","moved","move","_useState7","_useState8","mousedown","clickDown","_useState9","_useState10","useEffect","disableScroll","on","window","onload","imgs","event","preventDefault","document","getElementsByTagName","length","onmousedown","iStyles","divStyle","transformOrigin","svgStyle","left","components_MapSelect","components_DoMath","style","onMouseLeave","onMouseUp","clientX","clientY","_map","_map2","imageX","imageY","mouseUp","onMouseDown","mouseDown","onMouseMove","mouseMove","onWheel","mouseWheel","components_Images","stroke","fill","strokeWidth","deltaY","newScale","_map3","_map4","createMuiTheme","palette","type","typography","useNextVariants","App","core_styles","pages_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33432973.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.d4bd4642.png\";","import React from 'react';\n\nconst Images = ({ selectedMap, image }) => {\n    const info = mapInfo(selectedMap);\n    return (\n        <>\n            {(() => {\n                const arr = [];\n                for (let i = 0; i < info.nW; i++) {\n                    for (let g = 0; g < info.nH; g++) {\n                        arr.push(`${i},${g}`);\n                    }\n                }\n                return arr;\n            })().map(url => {\n                return <img className={image} key={url} alt={url} src={`${info.url}/${url}.png`} />;\n            })}\n        </>\n    );\n    function mapInfo(selectedMap) {\n        const info = {\n            cogmap1: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap/z1`,\n            },\n            cogmap2: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap2/z1`,\n            },\n            faintSignal: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap2/z3`,\n            },\n            oshan: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/oshan/z1`,\n            },\n            clarion: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/clarion/z1`,\n            },\n        };\n        return info[selectedMap];\n    }\n};\n\nexport default Images;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Paper,\n    Collapse,\n    TextField,\n    InputAdornment,\n    Typography,\n} from '@material-ui/core';\n\nconst styles = theme => ({\n    textField: {\n        width: 75,\n    },\n    main: {\n        zIndex: 2,\n        position: 'fixed',\n        marginLeft: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        maxWidth: 600 + theme.spacing.unit * 8,\n        width: 249,\n    },\n    resultsPos: {\n        zIndex: 2,\n        position: 'relative',\n        marginTop: theme.spacing.unit * 2,\n    },\n});\n\nconst DoMath = props => {\n    const { classes, selectedTile } = props;\n    const [gpsValues, setValue] = useState({ input: [100, 50], actualX: [6, 7], actualY: [49, 51] });\n    const [mathIn, toggleMath] = useState(true);\n    const xDivisor = gpsValues.actualX[1] - gpsValues.actualX[0],\n        yDivisor = gpsValues.actualY[1] - gpsValues.actualY[0],\n        xModifier = gpsValues.input[0] - gpsValues.actualX[0] / xDivisor,\n        yModifier = gpsValues.input[1] - gpsValues.actualY[0] / yDivisor;\n\n    return (\n        <div className={classes.main}>\n            <Collapse in={mathIn} collapsedHeight={'31px'}>\n                <Paper>\n                    <Typography onClick={() => toggleMath(!mathIn)} variant=\"overline\" align=\"center\" id=\"tableTitle\">\n                        Do telescience math\n                    </Typography>\n                    <Table padding=\"dense\">\n                        <TableHead>\n                            {/* HEADER */}\n                            <TableRow>\n                                <TableCell align=\"center\">Console coord</TableCell>\n                                <TableCell align=\"center\">GPS coord</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {/* CONSOLE X1 // ACTUAL X1 */}\n\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        onChange={e => update(e, 'input', 0)}\n                                        value={gpsValues.input[0]}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X1</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        onChange={e => update(e, 'actualX', 0)}\n                                        value={gpsValues.actualX[0]}\n                                    />\n                                </TableCell>\n                            </TableRow>\n\n                            {/* CONSOLE Y1 // ACTUAL Y1 */}\n\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        onChange={e => update(e, 'input', 1)}\n                                        value={gpsValues.input[1]}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y1</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        onChange={e => update(e, 'actualY', 0)}\n                                        value={gpsValues.actualY[0]}\n                                    />\n                                </TableCell>\n                            </TableRow>\n\n                            {/* CONSOLE X2 // ACTUAL X2 */}\n\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        key=\"gpsX1\"\n                                        value={gpsValues.input[0] + 1}\n                                        disabled\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X2</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        onChange={e => update(e, 'actualX', 1)}\n                                        value={gpsValues.actualX[1]}\n                                    />\n                                </TableCell>\n                            </TableRow>\n\n                            {/* CONSOLE Y2 // ACTUAL Y2 */}\n\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={gpsValues.input[1] + 1}\n                                        disabled\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y2</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={gpsValues.actualY[1]}\n                                        onChange={e => update(e, 'actualY', 1)}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Collapse>\n            <Paper className={classes.resultsPos}>\n                <Typography variant=\"overline\" align=\"center\" id=\"tableTitle\">\n                    Real Coordinates\n                </Typography>\n                <Table padding=\"dense\">\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>\n                                <TextField\n                                    className={classes.textField}\n                                    value={selectedTile[0]}\n                                    onChange={e => {\n                                        let val = parseInt(e.target.value);\n                                        if (!val) val = 0;\n                                        props.transform(prev => {\n                                            prev.selectedTile[0] = val;\n                                            return prev;\n                                        });\n                                    }}\n                                    InputProps={{\n                                        startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <TextField\n                                    className={classes.textField}\n                                    value={selectedTile[1]}\n                                    onChange={e => {\n                                        let val = parseInt(e.target.value);\n                                        if (!val) val = 0;\n                                        props.transform(prev => {\n                                            prev.selectedTile[1] = val;\n                                            return prev;\n                                        });\n                                    }}\n                                    InputProps={{\n                                        startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                    }}\n                                />\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n                <Typography variant=\"overline\" align=\"center\">\n                    Console Coordinates\n                </Typography>\n                <Table padding=\"dense\">\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>\n                                <TextField\n                                    disabled\n                                    className={classes.textField}\n                                    value={selectedTile[0] / xDivisor + xModifier}\n                                    InputProps={{\n                                        startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <TextField\n                                    disabled\n                                    className={classes.textField}\n                                    value={selectedTile[1] / yDivisor + yModifier}\n                                    InputProps={{\n                                        startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                    }}\n                                />\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </Paper>\n        </div>\n    );\n    function update(e, target, index) {\n        let val = parseInt(e.target.value);\n        if (!val) val = 0;\n        setValue(prev => {\n            prev[target][index] = val;\n            return prev;\n        });\n    }\n};\n\nexport default withStyles(styles)(DoMath);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, MenuItem, Paper } from '@material-ui/core';\n\nconst styles = theme => ({\n    paper: {\n        zIndex: 2,\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        marginTop: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 150,\n    },\n    textField: {\n        margin: theme.spacing.unit,\n        width: 150 - theme.spacing.unit * 2,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\nconst MapSelect = props => {\n    const { classes, selectMap, selectedMap } = props;\n    return (\n        <Paper className={classes.paper}>\n            <TextField\n                className={classes.textField}\n                select\n                label=\"Select Map\"\n                value={selectedMap}\n                onChange={e => {\n                    let val = e.target.value;\n                    selectMap(val);\n                }}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n            >\n                <MenuItem value=\"cogmap1\">Cogmap 1</MenuItem>\n                <MenuItem value=\"cogmap2\">Cogmap 2</MenuItem>\n                <MenuItem value=\"faintSignal\">Debris Field</MenuItem>\n                <MenuItem value=\"oshan\">Oshan</MenuItem>\n                <MenuItem value=\"clarion\">Clarion</MenuItem>\n            </TextField>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(MapSelect);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport spaceTile from '../space.png';\nimport disableScroll from 'disable-scroll';\nimport Images from '../components/Images';\nimport DoMath from '../components/DoMath';\nimport MapSelect from '../components/MapSelect';\n\nconst styles = theme => ({\n    main: {\n        backgroundImage: `url(${spaceTile})`,\n        display: 'block',\n    },\n    image: {\n        verticalAlign: 'middle',\n        width: 1200,\n        height: 1200,\n    },\n    noClick: {\n        userSelect: 'none',\n        WebkitUserDrag: 'none',\n    },\n});\n\nconst Main = props => {\n    const { classes } = props;\n    const [tf, transform] = useState({\n        initial: [0, 0],\n        pos: [-1300, -1300],\n        selectedTile: [1, 1],\n    });\n    const [zoom, setZoom] = useState(5);\n    const scale = zoom / 10;\n    const [moved, move] = useState(false);\n    const [mousedown, clickDown] = useState(false);\n    const [selectedMap, selectMap] = useState('cogmap1');\n\n    useEffect(() => {\n        disableScroll.on();\n        // Firefox crap, why can't they just have a CSS solution like everyone else?\n        window.onload = function(e) {\n            let evt = e || window.event, // define event (cross browser)\n                imgs; // images collection\n            if (evt.preventDefault) {\n                // collect all images on the page\n                imgs = document.getElementsByTagName('img');\n                // loop through fetched images\n                for (let i = 0; i < imgs.length; i++) {\n                    // and define onmousedown event handler\n                    imgs[i].onmousedown = function(e) {\n                        e.preventDefault();\n                    };\n                }\n            }\n        };\n    }, []);\n\n    const iStyles = {\n        divStyle: {\n            width: 1200 * 8,\n            height: 1200 * 8,\n            transformOrigin: `0 0`,\n            transform: `translate3D(${tf.pos[0]}px, ${tf.pos[1]}px, 0) scale(${scale})`,\n        },\n        svgStyle: {\n            zIndex: 1,\n            position: 'absolute',\n            left: (tf.selectedTile[0] - 1) * 32 * scale + tf.pos[0],\n            top: -(tf.selectedTile[1] - 300) * 32 * scale + tf.pos[1],\n        },\n    };\n\n    const Svg = () => (\n        <svg\n            onClick={() =>\n                transform(tf => {\n                    tf.selectedTile = [1, 1];\n                    return tf;\n                })\n            }\n            onWheel={e => mouseWheel(e)}\n            className={classes.noClick}\n            width={32 * scale}\n            height={32 * scale}\n            style={iStyles.svgStyle}\n        >\n            <rect\n                width={`${32 * scale}px`}\n                height={`${32 * scale}px`}\n                stroke=\"white\"\n                fill=\"transparent\"\n                strokeWidth=\"4\"\n            />\n        </svg>\n    );\n\n    return (\n        <div className={classes.noClick}>\n            <MapSelect selectMap={selectMap} selectedMap={selectedMap} />\n            <DoMath selectedTile={tf.selectedTile} transform={transform} />\n            <div\n                className={classes.main}\n                style={iStyles.divStyle}\n                onMouseLeave={() => clickDown(false)}\n                onMouseUp={e => mouseUp(e)}\n                onMouseDown={e => mouseDown(e)}\n                onMouseMove={e => mouseMove(e)}\n                onWheel={e => mouseWheel(e)}\n            >\n                <Images image={`${classes.image} ${classes.noClick}`} selectedMap={selectedMap} />\n            </div>\n            <Svg />\n        </div>\n    );\n\n    function mouseUp(e) {\n        clickDown(false);\n        // This works because mouseMove never fires unless you actually move the mouse. If mouseMove fires, we don't want to continue the rest of this.\n        if (moved) return move(false);\n        else moved && move(false);\n        const { clientX, clientY } = e;\n        const [imageX, imageY] = [clientX - tf.pos[0], clientY - tf.pos[1]].map(i => i / scale);\n        transform(tf => {\n            // Select each \"tile\", where each tile is 32 pixels by 32 pixels. Also, the game grid begins at [1,1] from the bottom left. Weird right?\n            tf.selectedTile = [1 + (imageX - (imageX % 32)) / 32, 300 - (imageY - (imageY % 32)) / 32];\n            return tf;\n        });\n    }\n\n    function mouseDown(e) {\n        clickDown(true);\n        const { clientX, clientY } = e;\n        return transform(tf => {\n            tf.initial = [clientX - tf.pos[0], clientY - tf.pos[1]];\n            return tf;\n        });\n    }\n\n    function mouseMove(e) {\n        if (!mousedown) return;\n        move(true);\n        const { clientX, clientY } = e;\n        return transform(tf => {\n            tf.pos = [clientX - tf.initial[0], clientY - tf.initial[1]];\n            return tf;\n        });\n    }\n\n    function mouseWheel(e) {\n        if (mousedown) return;\n        let { deltaY, clientX, clientY } = e;\n        if (deltaY > 0) {\n            if (zoom === 2) return;\n            setZoom(zoom - 1);\n        } else {\n            if (zoom === 25) return;\n            setZoom(zoom + 1);\n        }\n        return transform(tf => {\n            // This is because setZoom is async, but we want to use it right now. So we just build it ourselves\n            const newScale = (deltaY > 0 ? zoom - 1 : zoom + 1) / 10;\n            // These are the true pixel coordinates of the mouse on the image at normal scale\n            const [imageX, imageY] = [clientX - tf.pos[0], clientY - tf.pos[1]].map(i => i / scale);\n            // Apply the new scale to the true pixel coords, and add the clientX / clientY, because we subtracted it in zoomTarget.\n            tf.pos[0] = -imageX * newScale + clientX;\n            tf.pos[1] = -imageY * newScale + clientY;\n            return tf;\n        });\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './pages/Main';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nconst App = props => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Main />\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}