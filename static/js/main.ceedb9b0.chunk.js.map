{"version":3,"sources":["space.png","components/Images.js","components/Locations.js","components/DoMath.js","components/MapSelect.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Images","_ref","selectedMap","image","info","cogmap1","nW","nH","url","cogmap2","faintSignal","oshan","clarion","mapInfo","react_default","a","createElement","Fragment","arr","i","g","push","concat","map","onMouseDown","e","preventDefault","className","key","alt","src","withStyles","theme","main","marginTop","spacing","unit","line","fontSize","typography","caption","list","maxHeight","overflow","arrow","transition","transitions","create","easing","sharp","duration","enteringScreen","arrowShift","transform","headerText","marginLeft","props","classes","math","_useState","useState","_useState2","Object","slicedToArray","collapseIn","collapse","index_es","onClick","align","variant","disabled","icons_index_es","in","component","name","location","loc","_math$modifiers","modifiers","xModifier","yModifier","_math$divisors","divisors","xDivisor","yDivisor","toString","toUpperCase","textField","width","zIndex","position","resultsPos","popOver","popOverText","margin","maxWidth","goto","selectedTile","centerFunc","anchorEl","doAnchor","_useState3","input","actualX","actualY","_useState4","gpsValues","setValue","_useState5","_useState6","mathIn","toggleMath","id","padding","onChange","update","value","InputProps","startAdornment","event","val","currentTarget","parseInt","target","prev","aria-label","open","Boolean","onClose","anchorOrigin","vertical","horizontal","size","href","rel","tabIndex","components_Locations","index","paper","top","right","marginRight","menu","selectMap","inputProps","select","label","SelectProps","MenuProps","backgroundImage","spaceTile","display","height","verticalAlign","noClick","userSelect","initial","pos","tf","zoom","setZoom","scale","moved","move","_useState7","_useState8","mousedown","clickDown","_useState9","_useState10","iStyles","divStyle","transformOrigin","svgStyle","left","components_MapSelect","components_DoMath","centerScale","arguments","length","undefined","newScale","tileX","tileY","centerX","window","screen","centerY","style","onMouseLeave","onMouseUp","clientX","clientY","_map","_map2","imageX","imageY","mouseUp","mouseDown","onMouseMove","mouseMove","onWheel","mouseWheel","components_Images","stroke","fill","strokeWidth","deltaY","_map3","_map4","createMuiTheme","palette","type","useNextVariants","App","core_styles","pages_Main","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ceedb9b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.d4bd4642.png\";","import React from 'react';\n\nconst Images = ({ selectedMap, image }) => {\n    const info = mapInfo(selectedMap);\n    return (\n        <>\n            {(() => {\n                const arr = [];\n                for (let i = 0; i < info.nW; i++) {\n                    for (let g = 0; g < info.nH; g++) {\n                        arr.push(`${i},${g}`);\n                    }\n                }\n                return arr;\n            })().map(url => {\n                return (\n                    <img\n                        // Disable click dragging for firefox. Why can't it just be a CSS Solution?\n                        onMouseDown={e => e.preventDefault()}\n                        className={image}\n                        key={url}\n                        alt={url}\n                        src={`${info.url}/${url}.png`}\n                    />\n                );\n            })}\n        </>\n    );\n    function mapInfo(selectedMap) {\n        const info = {\n            cogmap1: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap/z1`,\n            },\n            cogmap2: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap2/z1`,\n            },\n            faintSignal: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/cogmap2/z3`,\n            },\n            oshan: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/oshan/z1`,\n            },\n            clarion: {\n                nW: 8,\n                nH: 8,\n                url: `https://goonhub.com/images/maps/clarion/z1`,\n            },\n        };\n        return info[selectedMap];\n    }\n};\n\nexport default Images;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Collapse, IconButton } from '@material-ui/core';\nimport { KeyboardArrowDown as Arrow } from '@material-ui/icons';\n\nconst styles = theme => ({\n    main: {\n        // Height of button that's being translated\n        marginTop: -48 + theme.spacing.unit,\n    },\n    line: {\n        fontSize: theme.typography.caption.fontSize,\n    },\n    list: {\n        maxHeight: '297px',\n        overflow: 'auto',\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerText: {\n        marginLeft: theme.spacing.unit * 2,\n    },\n});\n\nconst Locations = props => {\n    const { classes, math } = props;\n    const [collapseIn, collapse] = useState(false);\n    return (\n        <Paper className={classes.main}>\n            <Typography\n                onClick={() => collapse(!collapseIn)}\n                align=\"center\"\n                variant=\"overline\"\n                className={classes.headerText}\n            >\n                expedition locations\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\n                    <Arrow />\n                </IconButton>\n            </Typography>\n            <Collapse in={collapseIn}>\n                <Typography component=\"div\" variant=\"body2\" className={classes.list}>\n                    <ul>\n                        {[\n                            { name: 'meat station', location: [209, 23] },\n                            { name: 'sun observatory', location: [99, 85] },\n                            { name: 'lava moon', location: [88, 106] },\n                            { name: 'mars', location: [191, 135] },\n                            { name: 'ice moon', location: [15, 150] },\n                            { name: 'biodome', location: [120, 164] },\n                            { name: 'unknown', location: [131, 212] },\n                            { name: 'unknown', location: [236, 223] },\n                        ].map(loc => {\n                            const [xModifier, yModifier] = math.modifiers;\n                            const [xDivisor, yDivisor] = math.divisors;\n                            loc.location[0] = loc.location[0] / xDivisor + xModifier;\n                            loc.location[1] = loc.location[1] / yDivisor + yModifier;\n                            return (\n                                <li key={`${loc.name}_${loc.location.toString()}`}>\n                                    <p className={classes.line}>{loc.name.toUpperCase()}</p>\n                                    {`X: ${loc.location[0]}, Y: ${loc.location[1]}`}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </Typography>\n            </Collapse>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(Locations);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Paper,\n    Collapse,\n    TextField,\n    InputAdornment,\n    Typography,\n    IconButton,\n    Popover,\n    Button,\n} from '@material-ui/core';\nimport { Help, KeyboardArrowDown as Arrow, VerticalAlignBottom as GoTo } from '@material-ui/icons';\nimport Locations from './Locations';\n\nconst styles = theme => ({\n    textField: {\n        width: 75,\n    },\n    main: {\n        zIndex: 2,\n        position: 'fixed',\n        marginLeft: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 257,\n    },\n    resultsPos: {\n        zIndex: 2,\n        position: 'relative',\n        marginTop: theme.spacing.unit,\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerText: {\n        marginLeft: theme.spacing.unit * 2,\n    },\n    popOver: {\n        marginLeft: theme.spacing.unit,\n    },\n    popOverText: {\n        margin: theme.spacing.unit,\n        maxWidth: 257 + theme.spacing.unit * 5,\n    },\n    goto: {\n        zIndex: 2,\n        transform: 'translate(102px, -127px)',\n    },\n});\n\nconst DoMath = props => {\n    const { classes, selectedTile, centerFunc } = props;\n    const [anchorEl, doAnchor] = useState(null);\n    const [gpsValues, setValue] = useState({ input: [100, 50], actualX: [6, 7], actualY: [49, 51] });\n    const [mathIn, toggleMath] = useState(true);\n    const xDivisor = gpsValues.actualX[1] - gpsValues.actualX[0],\n        yDivisor = gpsValues.actualY[1] - gpsValues.actualY[0],\n        xModifier = gpsValues.input[0] - gpsValues.actualX[0] / xDivisor,\n        yModifier = gpsValues.input[1] - gpsValues.actualY[0] / yDivisor;\n\n    return (\n        <div className={classes.main}>\n            <Paper>\n                <Typography\n                    className={classes.headerText}\n                    onClick={() => toggleMath(!mathIn)}\n                    variant=\"overline\"\n                    align=\"center\"\n                    id=\"tableTitle\"\n                >\n                    Do telescience math\n                    <IconButton disabled className={mathIn ? classes.arrow : classes.arrowShift}>\n                        <Arrow />\n                    </IconButton>\n                </Typography>\n                <Collapse in={mathIn}>\n                    <Table padding=\"dense\">\n                        <TableHead>\n                            {/* HEADER */}\n                            <TableRow>\n                                <TableCell align=\"center\">Console coord</TableCell>\n                                <TableCell align=\"center\">GPS coord</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {/* CONSOLE X1 // ACTUAL X1 */}\n\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        disabled={!mathIn}\n                                        onChange={e => update(e, 'input', 0)}\n                                        value={gpsValues.input[0]}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X1</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        disabled={!mathIn}\n                                        onChange={e => update(e, 'actualX', 0)}\n                                        value={gpsValues.actualX[0]}\n                                    />\n                                </TableCell>\n                            </TableRow>\n\n                            {/* CONSOLE Y1 // ACTUAL Y1 */}\n\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        disabled={!mathIn}\n                                        onChange={e => update(e, 'input', 1)}\n                                        value={gpsValues.input[1]}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y1</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        disabled={!mathIn}\n                                        onChange={e => update(e, 'actualY', 0)}\n                                        value={gpsValues.actualY[0]}\n                                    />\n                                </TableCell>\n                            </TableRow>\n\n                            {/* CONSOLE X2 // ACTUAL X2 */}\n\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        key=\"gpsX1\"\n                                        value={gpsValues.input[0] + 1}\n                                        disabled\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X2</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        disabled={!mathIn}\n                                        onChange={e => update(e, 'actualX', 1)}\n                                        value={gpsValues.actualX[1]}\n                                    />\n                                </TableCell>\n                            </TableRow>\n\n                            {/* CONSOLE Y2 // ACTUAL Y2 */}\n\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={gpsValues.input[1] + 1}\n                                        disabled\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y2</InputAdornment>,\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        disabled={!mathIn}\n                                        onChange={e => update(e, 'actualY', 1)}\n                                        value={gpsValues.actualY[1]}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Collapse>\n            </Paper>\n            <Paper className={classes.resultsPos}>\n                <Typography\n                    className={classes.headerText}\n                    variant=\"overline\"\n                    align=\"center\"\n                    id=\"tableTitle\"\n                    onClick={event => {\n                        let val = event.currentTarget;\n                        doAnchor(val);\n                    }}\n                >\n                    Real Coordinates\n                    <IconButton disabled>\n                        <Help />\n                    </IconButton>\n                </Typography>\n                <Table padding=\"dense\">\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>\n                                <TextField\n                                    className={classes.textField}\n                                    value={selectedTile[0]}\n                                    onChange={e => {\n                                        let val = parseInt(e.target.value);\n                                        if (!val) val = 0;\n                                        props.transform(prev => {\n                                            prev.selectedTile[0] = val;\n                                            return prev;\n                                        });\n                                    }}\n                                    InputProps={{\n                                        startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <TextField\n                                    className={classes.textField}\n                                    value={selectedTile[1]}\n                                    onChange={e => {\n                                        let val = parseInt(e.target.value);\n                                        if (!val) val = 0;\n                                        props.transform(prev => {\n                                            prev.selectedTile[1] = val;\n                                            return prev;\n                                        });\n                                    }}\n                                    InputProps={{\n                                        startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                    }}\n                                />\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n                <Typography variant=\"overline\" align=\"center\">\n                    Console Coordinates\n                </Typography>\n                <Table padding=\"dense\">\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>\n                                <TextField\n                                    disabled\n                                    className={classes.textField}\n                                    value={selectedTile[0] / xDivisor + xModifier}\n                                    InputProps={{\n                                        startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <TextField\n                                    disabled\n                                    className={classes.textField}\n                                    value={selectedTile[1] / yDivisor + yModifier}\n                                    InputProps={{\n                                        startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                    }}\n                                />\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </Paper>\n            <Popover\n                className={classes.popOver}\n                aria-label=\"Math help\"\n                id=\"math-tips\"\n                open={Boolean(anchorEl)}\n                anchorEl={anchorEl}\n                onClose={() => doAnchor(null)}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <Typography align=\"center\" variant=\"caption\" className={classes.popOverText}>\n                    Stuck? Check the SS13 wiki on\n                    <Button\n                        size=\"small\"\n                        href=\"https://wiki.ss13.co/Telescience#Decoding_the_teleporter\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        decoding the teleporter\n                    </Button>\n                    <p>\n                        Fill in the relevant fields under \"DO TELESCIENCE MATH\". The website will handle the math for\n                        you, and your new console coordinates will be shown under \"CONSOLE COORDINATES\"\n                    </p>\n                    <p>When you're done, you can close the math table by clicking the \"DO TELESCIENCE MATH\" header.</p>\n                    <p>\n                        If you want to center the screen on custom coordinates, input any coordinate you want under the\n                        \"REAL COORDINATES\" table, then click the center button icon, inbetween the two rows.\n                    </p>\n                    <p>\n                        Click the \"EXPEDITION LOCATIONS\" header for a list of telescience expedition locations, their\n                        values will already have the math applied to them.\n                    </p>\n                </Typography>\n            </Popover>\n            <IconButton\n                tabIndex={-1}\n                className={classes.goto}\n                onClick={() => {\n                    // Want this to center the screen on the coordinates, and set the zoom level\n                    return centerFunc();\n                }}\n            >\n                <GoTo />\n            </IconButton>\n            <Locations math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier] }} />\n        </div>\n    );\n    function update(e, target, index) {\n        let val = parseInt(e.target.value);\n        if (!val) val = 0;\n        setValue(prev => {\n            prev[target][index] = val;\n            return prev;\n        });\n    }\n};\n\nexport default withStyles(styles)(DoMath);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, MenuItem, Paper } from '@material-ui/core';\n\nconst styles = theme => ({\n    paper: {\n        zIndex: 2,\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        marginTop: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 150,\n    },\n    textField: {\n        margin: theme.spacing.unit,\n        width: 150 - theme.spacing.unit * 2,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\nconst MapSelect = props => {\n    const { classes, selectMap, selectedMap } = props;\n    return (\n        <Paper className={classes.paper}>\n            <TextField\n                InputProps={{ inputProps: { tabIndex: -1 } }}\n                className={classes.textField}\n                select\n                label=\"Select Map\"\n                value={selectedMap}\n                onChange={e => {\n                    let val = e.target.value;\n                    selectMap(val);\n                }}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n            >\n                <MenuItem value=\"cogmap1\">Cogmap 1</MenuItem>\n                <MenuItem value=\"cogmap2\">Cogmap 2</MenuItem>\n                <MenuItem value=\"faintSignal\">Debris Field</MenuItem>\n                <MenuItem value=\"oshan\">Oshan</MenuItem>\n                <MenuItem value=\"clarion\">Clarion</MenuItem>\n            </TextField>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(MapSelect);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport spaceTile from '../space.png';\nimport Images from '../components/Images';\nimport DoMath from '../components/DoMath';\nimport MapSelect from '../components/MapSelect';\n\nconst styles = theme => ({\n    main: {\n        backgroundImage: `url(${spaceTile})`,\n        display: 'block',\n        width: 1200 * 8,\n        height: 1200 * 8,\n    },\n    image: {\n        verticalAlign: 'middle',\n        width: 1200,\n        height: 1200,\n    },\n    noClick: {\n        userSelect: 'none',\n    },\n});\n\nconst Main = props => {\n    const { classes } = props;\n    const [tf, transform] = useState({\n        initial: [0, 0],\n        pos: [-1300, -1300],\n        selectedTile: [137, 146],\n    });\n    const [zoom, setZoom] = useState(5);\n    const scale = zoom / 10;\n    const [moved, move] = useState(false);\n    const [mousedown, clickDown] = useState(false);\n    const [selectedMap, selectMap] = useState('cogmap1');\n\n    const iStyles = {\n        divStyle: {\n            transformOrigin: `0 0`,\n            transform: `translate3D(${tf.pos[0]}px, ${tf.pos[1]}px, 0) scale(${scale})`,\n        },\n        svgStyle: {\n            zIndex: 1,\n            position: 'absolute',\n            left: (tf.selectedTile[0] - 1) * 32 * scale + tf.pos[0],\n            top: -(tf.selectedTile[1] - 300) * 32 * scale + tf.pos[1],\n        },\n    };\n\n    const Svg = () => (\n        <svg\n            onClick={() =>\n                transform(tf => {\n                    tf.selectedTile = [1, 1];\n                    return tf;\n                })\n            }\n            onWheel={e => mouseWheel(e)}\n            className={classes.noClick}\n            width={32 * scale}\n            height={32 * scale}\n            style={iStyles.svgStyle}\n        >\n            <rect\n                width={`${32 * scale}px`}\n                height={`${32 * scale}px`}\n                stroke=\"white\"\n                fill=\"transparent\"\n                strokeWidth=\"4\"\n            />\n        </svg>\n    );\n\n    return (\n        <div className={classes.noClick}>\n            <MapSelect selectMap={selectMap} selectedMap={selectedMap} />\n            <DoMath selectedTile={tf.selectedTile} transform={transform} centerFunc={centerCoords} />\n            <div\n                className={classes.main}\n                style={iStyles.divStyle}\n                onMouseLeave={() => clickDown(false)}\n                onMouseUp={e => mouseUp(e)}\n                onMouseDown={e => mouseDown(e)}\n                onMouseMove={e => mouseMove(e)}\n                onWheel={e => mouseWheel(e)}\n            >\n                <Images image={`${classes.image} ${classes.noClick}`} selectedMap={selectedMap} />\n            </div>\n            <Svg />\n        </div>\n    );\n\n    function mouseUp(e) {\n        clickDown(false);\n        // This works because mouseMove never fires unless you actually move the mouse. If mouseMove fires, we don't want to continue the rest of this.\n        if (moved) return move(false);\n        else moved && move(false);\n        const { clientX, clientY } = e;\n        const [imageX, imageY] = [clientX - tf.pos[0], clientY - tf.pos[1]].map(i => i / scale);\n        transform(tf => {\n            // Select each \"tile\", where each tile is 32 pixels by 32 pixels. Also, the game grid begins at [1,1] from the bottom left. Weird right?\n            tf.selectedTile = [1 + (imageX - (imageX % 32)) / 32, 300 - (imageY - (imageY % 32)) / 32];\n            return tf;\n        });\n    }\n\n    function mouseDown(e) {\n        clickDown(true);\n        const { clientX, clientY } = e;\n        return transform(tf => {\n            tf.initial = [clientX - tf.pos[0], clientY - tf.pos[1]];\n            return tf;\n        });\n    }\n\n    function mouseMove(e) {\n        if (!mousedown) return;\n        move(true);\n        const { clientX, clientY } = e;\n        return transform(tf => {\n            tf.pos = [clientX - tf.initial[0], clientY - tf.initial[1]];\n            return tf;\n        });\n    }\n\n    function mouseWheel(e) {\n        if (mousedown) return;\n        let { deltaY, clientX, clientY } = e;\n        if (deltaY > 0) {\n            if (zoom === 2) return;\n            setZoom(zoom - 1);\n        } else {\n            if (zoom === 15) return;\n            setZoom(zoom + 1);\n        }\n        return transform(tf => {\n            // This is because setZoom is async, but we want to use it right now. So we just build it ourselves\n            const newScale = (deltaY > 0 ? zoom - 1 : zoom + 1) / 10;\n            // These are the true pixel coordinates of the mouse on the image at normal scale\n            const [imageX, imageY] = [clientX - tf.pos[0], clientY - tf.pos[1]].map(i => i / scale);\n            // Apply the new scale to the true pixel coords, and add the clientX / clientY, because we subtracted it in zoomTarget.\n            tf.pos[0] = -imageX * newScale + clientX;\n            tf.pos[1] = -imageY * newScale + clientY;\n            return tf;\n        });\n    }\n\n    function centerCoords(centerScale = 15) {\n        // Default to max 1.5 scale, optional arg to change this\n        setZoom(centerScale);\n        const newScale = centerScale / 10;\n        const [tileX, tileY] = [(tf.selectedTile[0] - 1) * 32 * newScale, -(tf.selectedTile[1] - 303) * 32 * newScale];\n        const [centerX, centerY] = [window.screen.width / 2, window.screen.height / 2];\n        return transform(tf => {\n            tf.pos[0] = -tileX + centerX;\n            tf.pos[1] = -tileY + centerY;\n            return tf;\n        });\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './pages/Main';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nconst App = props => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Main />\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}