{"version":3,"sources":["space.png","components/Images.js","components/Locations.js","components/MapSelect.js","components/FavoritesMenu.js","components/HelperPopover.js","components/Overlay.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Images","_ref","selectedMap","image","info","cogmap1","cogmap2","faintSignal","oshan","clarion","destiny","samedi","mapInfo","react_default","a","createElement","onDragStart","e","preventDefault","arr","i","g","push","concat","map","url","className","key","alt","src","withStyles","theme","main","marginTop","spacing","unit","line","fontSize","typography","caption","list","maxHeight","overflow","arrow","transition","transitions","create","easing","sharp","duration","enteringScreen","arrowShift","transform","headerText","marginLeft","props","classes","math","_useState","useState","_useState2","Object","slicedToArray","collapseIn","collapse","index_es","onClick","align","variant","disabled","icons_index_es","in","component","name","location","loc","_math$modifiers","modifiers","xModifier","yModifier","_math$divisors","divisors","xDivisor","yDivisor","toString","toUpperCase","paper","position","marginRight","textField","margin","width","selectMap","InputProps","inputProps","tabIndex","select","label","value","onChange","val","target","SelectProps","MenuProps","menu","listHeight","overflowY","centerCoords","zoom","favorites","modFavorites","handleCollapse","_useState3","_useState4","permaCollapse","doPermaCollapse","useEffect","length","aria-owns","undefined","aria-haspopup","id","each","index","FormHelperTextProps","style","textAlign","helperText","startAdornment","aria-label","endAdornment","favs","objectSpread","defineProperty","filter","items","HelperText","Fragment","color","size","href","rel","HelperPopover","open","anchorEl","onClose","anchorOrigin","popOver","popOverText","HelperPopover_HelperText","zIndex","resultsPos","maxWidth","goto","rightPanel","top","right","helpButton","bottom","marginBottom","selectedTile","doAnchor","mathIn","toggleMath","_useState5","input","actualX","actualY","_useState6","gpsValues","setValue","padding","data-testid","update","parseInt","tf","components_HelperPopover","Boolean","vertical","horizontal","components_Locations","components_MapSelect","components_FavoritesMenu","event","currentTarget","height","prev","console","log","newArr","backgroundImage","spaceTile","display","verticalAlign","imageUnclicked","cursor","imageClicked","noClick","userSelect","initial","mouse","pos","_useState7","_useState8","setZoom","scale","_useState9","_useState10","mousedown","clickDown","_useState11","_useState12","focussed","focus","_useState13","_useState14","doMenu","data","localStorage","getItem","JSON","parse","localKeys","keys","stateKeys","stringify","missingKey","oKey","includes","extraKey","forEach","obj","pop","apply","toConsumableArray","getStorage","setItem","iStyles","divStyle","transformOrigin","selectorStyle","tilePosition","onKeyDown","altKey","acceptableKeys","w","s","d","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","1","2","3","4","6","7","8","9","+","-","keyDown","_len","arguments","args","Array","_key","link","easterEggPos","easterEgg","Math","round","random","components_Overlay","onMouseLeave","onMouseEnter","onContextMenu","contextMenu","clientX","clientY","tileMath","imgCoords","onMouseDown","onMouseUp","onMouseMove","onWheel","mouseWheel","components_Images","fav","stopPropagation","item","stroke","fill","strokeWidth","mouseDown","MenuListProps","disablePadding","anchorPosition","left","anchorReference","closeMenu","x","y","_x","_x2","funcScale","deltaY","newScale","_imgCoords","_imgCoords2","imageX","imageY","centerScale","modifier","newTile","tile","tileX","tileY","centerX","window","screen","centerY","createMuiTheme","palette","type","useNextVariants","App","core_styles","pages_Main","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f471fa0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.d4bd4642.png\";","import React from 'react';\n\nconst Images = ({ selectedMap, image }) => {\n    const info = mapInfo(selectedMap);\n    return (\n        <div onDragStart={e => e.preventDefault()}>\n            {(() => {\n                const arr = [];\n                for (let i = 0; i < 8; i++) {\n                    for (let g = 0; g < 8; g++) {\n                        arr.push(`${i},${g}`);\n                    }\n                }\n                return arr;\n            })().map(url => {\n                return <img className={image} key={url} alt={url} src={`${info}/${url}.png`} />;\n            })}\n        </div>\n    );\n    function mapInfo(selectedMap) {\n        const info = {\n            cogmap1: `https://goonhub.com/images/maps/cogmap/z1`,\n            cogmap2: `https://goonhub.com/images/maps/cogmap2/z1`,\n            faintSignal: `https://goonhub.com/images/maps/cogmap2/z3`,\n            oshan: `https://goonhub.com/images/maps/oshan/z1`,\n            clarion: `https://goonhub.com/images/maps/clarion/z1`,\n            destiny: `https://goonhub.com/images/maps/destiny/z1`,\n            samedi: `https://goonhub.com/images/maps/samedi/z1`,\n        };\n        if (!info[selectedMap]) return info['cogmap1'];\n        return info[selectedMap];\n    }\n};\n\nexport default Images;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Collapse, IconButton } from '@material-ui/core';\nimport { KeyboardArrowDown as Arrow } from '@material-ui/icons';\n\nconst styles = theme => ({\n    main: {\n        // Height of button that's being translated\n        marginTop: -48 + theme.spacing.unit,\n    },\n    line: {\n        fontSize: theme.typography.caption.fontSize,\n    },\n    list: {\n        maxHeight: '297px',\n        overflow: 'auto',\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerText: {\n        marginLeft: theme.spacing.unit * 2,\n    },\n});\n\nconst Locations = props => {\n    const { classes, math } = props;\n    const [collapseIn, collapse] = useState(false);\n    return (\n        <Paper className={classes.main}>\n            <Typography\n                onClick={() => collapse(!collapseIn)}\n                align=\"center\"\n                variant=\"overline\"\n                className={classes.headerText}\n            >\n                expedition locations\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\n                    <Arrow />\n                </IconButton>\n            </Typography>\n            <Collapse in={collapseIn}>\n                <Typography component=\"div\" variant=\"body2\" className={classes.list}>\n                    <ul>\n                        {[\n                            { name: 'meat station', location: [209, 23] },\n                            { name: 'solar observatory', location: [99, 85] },\n                            { name: 'lava moon', location: [88, 106] },\n                            { name: 'mars', location: [191, 135] },\n                            { name: 'ice moon', location: [15, 150] },\n                            { name: 'biodome', location: [120, 164] },\n                            { name: 'unknown', location: [131, 212] },\n                            { name: 'unknown', location: [236, 223] },\n                        ].map(loc => {\n                            const [xModifier, yModifier] = math.modifiers;\n                            const [xDivisor, yDivisor] = math.divisors;\n                            loc.location[0] = loc.location[0] / xDivisor + xModifier;\n                            loc.location[1] = loc.location[1] / yDivisor + yModifier;\n                            return (\n                                <li key={`${loc.name}_${loc.location.toString()}`}>\n                                    <p className={classes.line}>{loc.name.toUpperCase()}</p>\n                                    {`X: ${loc.location[0]}, Y: ${loc.location[1]}`}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </Typography>\n            </Collapse>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(Locations);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, MenuItem, Paper } from '@material-ui/core';\n\nconst styles = theme => ({\n    paper: {\n        position: 'relative',\n        marginTop: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    textField: {\n        margin: theme.spacing.unit,\n        width: `calc(100% - ${theme.spacing.unit * 2}px)`,\n    },\n});\n\nconst MapSelect = props => {\n    const { classes, selectMap, selectedMap } = props;\n    return (\n        <Paper className={classes.paper}>\n            <TextField\n                InputProps={{ inputProps: { tabIndex: -1 } }}\n                className={classes.textField}\n                select\n                label=\"Select Map\"\n                value={selectedMap}\n                onChange={e => {\n                    let val = e.target.value;\n                    return selectMap(val);\n                }}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n            >\n                <MenuItem value=\"cogmap1\">Cogmap 1</MenuItem>\n                <MenuItem value=\"cogmap2\">Cogmap 2</MenuItem>\n                <MenuItem value=\"faintSignal\">Debris Field</MenuItem>\n                <MenuItem value=\"oshan\">Oshan</MenuItem>\n                <MenuItem value=\"clarion\">Clarion</MenuItem>\n                <MenuItem value=\"destiny\">Destiny</MenuItem>\n                <MenuItem value=\"samedi\">Samedi</MenuItem>\n            </TextField>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(MapSelect);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Collapse, List, ListItem, Paper, Typography, IconButton, TextField, InputAdornment } from '@material-ui/core';\nimport { KeyboardArrowDown as Arrow, Close, MyLocation } from '@material-ui/icons';\n\nconst styles = theme => ({\n    paper: {\n        position: 'relative',\n        marginTop: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit,\n    },\n    headerText: {\n        marginRight: theme.spacing.unit * 6,\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    listHeight: {\n        maxHeight: 538 - 48 * 2 - theme.spacing.unit * 4,\n        overflowY: 'auto',\n    },\n});\n\nconst FavoritesMenu = props => {\n    const { classes, centerCoords, zoom, favorites, modFavorites, math, selectedMap } = props;\n    // This is to handle a sort of auto open, auto close thing\n    const [collapseIn, handleCollapse] = useState(false);\n    const [permaCollapse, doPermaCollapse] = useState(false);\n\n    useEffect(\n        () => {\n            if (favorites[selectedMap].length >= 1 && !collapseIn && !permaCollapse) return handleCollapse(true);\n            else if (favorites[selectedMap].length < 1) return handleCollapse(false);\n        },\n        [props]\n    );\n\n    return (\n        <Paper className={classes.paper}>\n            <Typography\n                className={classes.headerText}\n                aria-owns={collapseIn ? 'favorites-menu' : undefined}\n                aria-haspopup=\"true\"\n                variant=\"overline\"\n                align=\"center\"\n                onClick={() => {\n                    if (!favorites[selectedMap].length) return handleCollapse(false);\n                    else {\n                        doPermaCollapse(true);\n                        return handleCollapse(!collapseIn);\n                    }\n                }}\n            >\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\n                    <Arrow />\n                </IconButton>\n                Favorites\n            </Typography>\n            <Collapse in={collapseIn}>\n                <List id=\"favorites-menu\" className={classes.listHeight}>\n                    {favorites[selectedMap].map((each, index) => {\n                        return (\n                            <ListItem key={`${each.location}_key`}>\n                                <TextField\n                                    value={each.name}\n                                    onChange={e => {\n                                        let val = e.target.value;\n                                        return modFavorites(favorites => {\n                                            favorites[selectedMap][index].name = val;\n                                            return favorites;\n                                        });\n                                    }}\n                                    FormHelperTextProps={{ style: { textAlign: 'center' } }}\n                                    helperText={`Real: [${each.location.toString()}] ----- Console: [${each\n                                        .location[0] /\n                                        math.divisors[0] +\n                                        math.modifiers[0]},${each.location[1] / math.divisors[1] + math.modifiers[1]}]`}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <IconButton\n                                                    onClick={() => centerCoords(zoom, [0, 0], each.location)}\n                                                    aria-label=\"go to\"\n                                                >\n                                                    <MyLocation />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    onClick={() => {\n                                                        if (favorites.length === 1) handleCollapse(false);\n                                                        return modFavorites(favs => ({\n                                                            ...favs,\n                                                            [selectedMap]: favs[selectedMap].filter(\n                                                                items => items !== each\n                                                            ),\n                                                        }));\n                                                    }}\n                                                    aria-label=\"delete\"\n                                                >\n                                                    <Close />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Collapse>\n        </Paper>\n    );\n};\n\nexport default withStyles(styles)(FavoritesMenu);\n","import React from 'react';\nimport { Button, Popover, Typography } from '@material-ui/core';\n\nconst HelperText = () => {\n    return (\n        <>\n            <h3>Help, I'm stuck!</h3>\n            <hr />\n            <p>\n                Send two Space GPS's through the teleporter at the console coord values, and record their actual\n                position under GPS coord.\n            </p>\n            <p>When you're done, you can close the math table by clicking the \"DO TELESCIENCE MATH\" header.</p>\n            <p>ALT + WASD, Arrow Keys, or Numpad to navigate via keyboard.</p>\n            <p>Right click anywhere to add favorites.</p>\n            <p>\n                Stuck? Check the SS13 wiki on{`\\t`}\n                <Button\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    href=\"https://wiki.ss13.co/Telescience#Decoding_the_teleporter\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    decoding the teleporter\n                </Button>\n            </p>\n            <p>\n                Need more info?{`\\t`}\n                <Button\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    href=\"https://github.com/Kayle7777/telescience\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    Click here\n                </Button>\n                {`\\t`}for a detailed readme.\n            </p>\n            <hr />\n            <p>Check out the alpha version of my ChemHelper site. Plenty more features are in store!</p>\n            <Button\n                color=\"secondary\"\n                variant=\"outlined\"\n                size=\"small\"\n                href=\"https://kayle7777.github.io/chemhelper/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n            >\n                ChemHelper\n            </Button>\n        </>\n    );\n};\n\nconst HelperPopover = props => {\n    const { classes, open, anchorEl, onClose, anchorOrigin } = props;\n    return (\n        <Popover\n            className={classes.popOver}\n            aria-label=\"Math help\"\n            id=\"math-tips\"\n            open={open}\n            anchorEl={anchorEl}\n            onClose={onClose}\n            anchorOrigin={anchorOrigin}\n        >\n            <Typography variant=\"caption\" className={classes.popOverText}>\n                <HelperText />\n            </Typography>\n        </Popover>\n    );\n};\n\nexport default HelperPopover;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Paper,\n    Collapse,\n    TextField,\n    InputAdornment,\n    Typography,\n    IconButton,\n    Fab,\n} from '@material-ui/core';\nimport { Help, KeyboardArrowDown as Arrow, VerticalAlignCenter as GoTo } from '@material-ui/icons';\nimport Locations from './Locations';\nimport MapSelect from './MapSelect';\nimport FavoritesMenu from './FavoritesMenu';\nimport HelperPopover from './HelperPopover';\n\nconst styles = theme => ({\n    textField: {\n        width: 75,\n    },\n    main: {\n        zIndex: 2,\n        position: 'fixed',\n        marginLeft: theme.spacing.unit,\n        marginTop: theme.spacing.unit,\n        width: 257,\n    },\n    resultsPos: {\n        zIndex: 2,\n        position: 'relative',\n        marginTop: theme.spacing.unit,\n    },\n    arrow: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    arrowShift: {\n        transform: 'rotate(180deg)',\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerText: {\n        marginLeft: theme.spacing.unit * 2,\n    },\n    popOver: {\n        marginLeft: theme.spacing.unit,\n    },\n    popOverText: {\n        margin: theme.spacing.unit,\n        maxWidth: 257 + theme.spacing.unit * 30,\n    },\n    goto: {\n        zIndex: 2,\n        transform: 'translate(102px, -127px)',\n    },\n    rightPanel: {\n        position: 'absolute',\n        zIndex: 2,\n        top: 0,\n        right: 0,\n        width: 300,\n    },\n    helpButton: {\n        position: 'fixed',\n        bottom: 0,\n        right: 0,\n        marginBottom: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit * 2,\n    },\n});\n\nconst Overlay = props => {\n    const { classes, selectedTile, centerCoords, selectMap, selectedMap, zoom, favorites, modFavorites } = props;\n    // anchorEl / doAnchor used for HelperPopover popover\n    const [anchorEl, doAnchor] = useState(null);\n    // mathIn / toggleMath used for math menu collapse\n    const [mathIn, toggleMath] = useState(true);\n    const [gpsValues, setValue] = useState({ input: [100, 50], actualX: [6, 7], actualY: [49, 51] });\n    const xDivisor = gpsValues.actualX[1] - gpsValues.actualX[0],\n        yDivisor = gpsValues.actualY[1] - gpsValues.actualY[0],\n        xModifier = gpsValues.input[0] - gpsValues.actualX[0] / xDivisor,\n        yModifier = gpsValues.input[1] - gpsValues.actualY[0] / yDivisor;\n    return (\n        <>\n            <div className={classes.main}>\n                <Paper>\n                    <Typography\n                        className={classes.headerText}\n                        onClick={() => toggleMath(!mathIn)}\n                        variant=\"overline\"\n                        align=\"center\"\n                        id=\"tableTitle\"\n                    >\n                        Do telescience math\n                        <IconButton disabled className={mathIn ? classes.arrow : classes.arrowShift}>\n                            <Arrow />\n                        </IconButton>\n                    </Typography>\n                    <Collapse in={mathIn}>\n                        <Table padding=\"dense\">\n                            <TableHead>\n                                {/* HEADER */}\n                                <TableRow>\n                                    <TableCell align=\"center\">Console coord</TableCell>\n                                    <TableCell align=\"center\">GPS coord</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody data-testid=\"telescience-gps\">\n                                {/* CONSOLE X1 // ACTUAL X1 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'input', 0)}\n                                            value={gpsValues.input[0]}\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">X1</InputAdornment>,\n                                                'data-testid': 'input-1-0',\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualX', 0)}\n                                            value={gpsValues.actualX[0]}\n                                            InputProps={{\n                                                'data-testid': 'actual-x-0',\n                                            }}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE Y1 // ACTUAL Y1 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'input', 1)}\n                                            value={gpsValues.input[1]}\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">Y1</InputAdornment>,\n                                                'data-testid': 'input-1-1',\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualY', 0)}\n                                            value={gpsValues.actualY[0]}\n                                            InputProps={{\n                                                'data-testid': 'actual-y-0',\n                                            }}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE X2 // ACTUAL X2 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            value={gpsValues.input[0] + 1}\n                                            disabled\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">X2</InputAdornment>,\n                                                'data-testid': 'input-2-0',\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualX', 1)}\n                                            value={gpsValues.actualX[1]}\n                                            InputProps={{\n                                                'data-testid': 'actual-x-1',\n                                            }}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                                {/* CONSOLE Y2 // ACTUAL Y2 */}\n\n                                <TableRow>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            value={gpsValues.input[1] + 1}\n                                            disabled\n                                            InputProps={{\n                                                startAdornment: <InputAdornment position=\"start\">Y2</InputAdornment>,\n                                                'data-testid': 'input-2-1',\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            className={classes.textField}\n                                            disabled={!mathIn}\n                                            onChange={e => update(e, 'actualY', 1)}\n                                            value={gpsValues.actualY[1]}\n                                            InputProps={{\n                                                'data-testid': 'actual-y-1',\n                                            }}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Collapse>\n                </Paper>\n                <Paper className={classes.resultsPos}>\n                    <Typography className={classes.headerText} variant=\"overline\" align=\"center\" id=\"tableTitle\">\n                        Real Coordinates\n                    </Typography>\n                    <Table padding=\"dense\">\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={selectedTile[0]}\n                                        onChange={e => {\n                                            let val = parseInt(e.target.value);\n                                            if (!val) val = 0;\n                                            return props.transform(tf => ({\n                                                ...tf,\n                                                selectedTile: [val, tf.selectedTile[1]],\n                                            }));\n                                        }}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                            'data-testid': 'selected-x',\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={selectedTile[1]}\n                                        onChange={e => {\n                                            let val = parseInt(e.target.value);\n                                            if (!val) val = 0;\n                                            return props.transform(tf => ({\n                                                ...tf,\n                                                selectedTile: [tf.selectedTile[0], val],\n                                            }));\n                                        }}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                            'data-testid': 'selected-y',\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Typography variant=\"overline\" align=\"center\">\n                        Console Coordinates\n                    </Typography>\n                    <Table padding=\"dense\">\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        disabled\n                                        className={classes.textField}\n                                        value={selectedTile[0] / xDivisor + xModifier}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\n                                            'data-testid': 'console-x',\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        disabled\n                                        className={classes.textField}\n                                        value={selectedTile[1] / yDivisor + yModifier}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\n                                            'data-testid': 'console-y',\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <HelperPopover\n                    classes={classes}\n                    open={Boolean(anchorEl)}\n                    anchorEl={anchorEl}\n                    onClose={() => doAnchor(null)}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                />\n                <IconButton tabIndex={-1} className={classes.goto} onClick={() => centerCoords()}>\n                    <GoTo />\n                </IconButton>\n                <Locations math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier] }} />\n            </div>\n            <div className={classes.rightPanel}>\n                <MapSelect selectMap={selectMap} selectedMap={selectedMap} />\n                <FavoritesMenu\n                    zoom={zoom}\n                    centerCoords={centerCoords}\n                    favorites={favorites}\n                    selectedMap={selectedMap}\n                    modFavorites={modFavorites}\n                    math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier] }}\n                />\n                <Fab\n                    className={classes.helpButton}\n                    onClick={event => {\n                        let val = event.currentTarget;\n                        doAnchor(val);\n                    }}\n                >\n                    <Help style={{ height: '100%', width: '100%', transform: 'scale(1.21, 1.21)' }} />\n                </Fab>\n            </div>\n        </>\n    );\n    function update(e, target, index) {\n        let val = parseInt(e.target.value);\n        if (!val) val = 0;\n        return setValue(prev => {\n            console.log(prev[target][index], target, index);\n            let newArr = prev[target];\n            newArr[index] = val;\n            return { ...prev, [target]: newArr };\n        });\n    }\n};\n\nexport default withStyles(styles)(Overlay);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Menu, Button } from '@material-ui/core';\nimport { Info } from '@material-ui/icons';\nimport spaceTile from '../space.png';\nimport Images from '../components/Images';\nimport Overlay from '../components/Overlay';\n\nconst styles = theme => ({\n    main: {\n        backgroundImage: `url(${spaceTile})`,\n        display: 'block',\n        width: 1200 * 8,\n        height: 1200 * 8,\n        // transition: theme.transitions.create(['transform'], {\n        //     duration: 100,\n        // }),\n    },\n    image: {\n        verticalAlign: 'middle',\n        width: 1200,\n        height: 1200,\n    },\n    imageUnclicked: {\n        cursor: 'grab',\n    },\n    imageClicked: {\n        cursor: 'grabbing',\n    },\n    noClick: {\n        userSelect: 'none',\n    },\n});\n\nconst Main = props => {\n    const { classes } = props;\n    // tf.mouse is used to determine if the mouse moved during onClick\n    const [tf, transform] = useState({\n        initial: [0, 0],\n        mouse: [0, 0],\n        pos: [-2200, -2000],\n        selectedTile: [139, 192],\n    });\n    const [selectedMap, selectMap] = useState('cogmap1');\n    const [favorites, modFavorites] = useState({\n        cogmap1: [\n            { name: 'Telescience', location: [112, 123] },\n            { name: 'AI core', location: [137, 146] },\n            { name: \"Captain's Locker\", location: [85, 166] },\n        ],\n        cogmap2: [{ name: 'Telescience', location: [104, 120] }, { name: 'AI core', location: [190, 220] }],\n        faintSignal: [{ name: 'RobustTec Implants', location: [266, 132] }, { name: 'Phaser', location: [285, 162] }],\n        oshan: [{ name: 'AI Core', location: [196, 160] }, { name: 'Telescience', location: [181, 174] }],\n        clarion: [{ name: 'AI Core', location: [133, 99] }, { name: 'Telescience', location: [153, 107] }],\n        destiny: [],\n        samedi: [],\n    });\n    const [zoom, setZoom] = useState(7);\n    const scale = zoom / 10;\n    // mousedown / clickDown used for wheel and mousemove events\n    const [mousedown, clickDown] = useState(false);\n    // focussed / focus used for keydown events.\n    const [focussed, focus] = useState(false);\n    // menu / doMenu used for menu events (obviously)\n    const [menu, doMenu] = useState({ mouse: [0, 0], target: null });\n\n    // Check for an existing localStorage item, if it is different than the existing state localStorage item, set it as the state.\n    useEffect(() => {\n        const data = getStorage();\n        if (data) modFavorites(data);\n    }, []);\n\n    // Set a new localStorage item every time a favorite is added or removed\n    useEffect(\n        () => {\n            setStorage(favorites);\n        },\n        [JSON.stringify(favorites)]\n    );\n\n    const iStyles = {\n        divStyle: {\n            transformOrigin: `0 0`,\n            transform: `translate3D(${tf.pos[0]}px, ${tf.pos[1]}px, 0) scale(${scale})`,\n        },\n        selectorStyle: {\n            zIndex: 1,\n            position: 'fixed',\n            ...tilePosition(tf.selectedTile),\n        },\n    };\n\n    const Svg = props => (\n        <svg\n            onClick={props.onClick}\n            onWheel={props.onWheel ? props.onWheel : mouseWheel}\n            onMouseDown={props.mouseDown}\n            onMouseEnter={() => focus(true)}\n            onContextMenu={props.onContextMenu ? props.onContextMenu : e => e.preventDefault()}\n            className={`${classes.noClick} ${classes.imageUnclicked}`}\n            width={32 * scale}\n            height={32 * scale}\n            style={props.style}\n        >\n            <rect\n                width={`${32 * scale}px`}\n                height={`${32 * scale}px`}\n                stroke={props.color}\n                fill=\"transparent\"\n                strokeWidth=\"4\"\n            />\n        </svg>\n    );\n\n    return (\n        <div className={classes.noClick} onKeyDown={e => keyDown(e)} tabIndex={0}>\n            {selectedMap === 'oshan' &&\n                easterEgg(\n                    // Ocean man OR sea of love\n                    {\n                        link:\n                            Math.round(Math.random()) === 0\n                                ? 'https://www.youtube.com/watch?v=6E5m_XtCX3c'\n                                : 'https://youtu.be/3PgwDlbdew8?t=10',\n                        pos: [150, 150],\n                    },\n                    // Tiburón bebé\n                    { link: 'https://youtu.be/dJBD0F-1V00?t=21', pos: [3, 4], color: '#6D7373' }\n                )}\n            <Overlay\n                selectedTile={tf.selectedTile}\n                centerCoords={centerCoords}\n                selectMap={selectMap}\n                selectedMap={selectedMap}\n                zoom={zoom}\n                favorites={favorites}\n                modFavorites={modFavorites}\n                transform={transform}\n            />\n            <div\n                onMouseLeave={() => {\n                    clickDown(false);\n                    return focus(false);\n                }}\n                onMouseEnter={() => focus(true)}\n                onContextMenu={contextMenu}\n                onClick={mouseClick}\n                onMouseDown={mouseDown}\n                onMouseUp={() => clickDown(false)}\n                onMouseMove={mouseMove}\n                onWheel={mouseWheel}\n            >\n                <div className={classes.main} style={iStyles.divStyle}>\n                    <Images\n                        image={`${classes.image} ${classes.noClick} ${\n                            mousedown ? classes.imageClicked : classes.imageUnclicked\n                        }`}\n                        selectedMap={selectedMap}\n                    />\n                </div>\n                {favorites[selectedMap].length > 0 &&\n                    favorites[selectedMap].map(fav => {\n                        return (\n                            <svg\n                                key={`${fav.location.toString()}_SVG`}\n                                onContextMenu={e => {\n                                    e.stopPropagation();\n                                    e.preventDefault();\n                                    return modFavorites(prev => ({\n                                        ...prev,\n                                        [selectedMap]: prev[selectedMap].filter(item => item !== fav),\n                                    }));\n                                }}\n                                style={{\n                                    zIndex: 1,\n                                    position: 'fixed',\n                                    ...tilePosition(fav.location),\n                                }}\n                                className={`${classes.noClick} ${classes.imageUnclicked}`}\n                                width={32 * scale}\n                                height={32 * scale}\n                            >\n                                <rect\n                                    width={`${32 * scale}px`}\n                                    height={`${32 * scale}px`}\n                                    stroke=\"#39FF14\"\n                                    fill=\"transparent\"\n                                    strokeWidth=\"4\"\n                                />\n                            </svg>\n                        );\n                    })}\n            </div>\n            <Svg\n                color=\"white\"\n                style={iStyles.selectorStyle}\n                onClick={() => transform(tf => ({ ...tf, selectedTile: [1, 1] }))}\n                onContextMenu={contextMenu}\n            />\n            <Menu\n                MenuListProps={{ disablePadding: true }}\n                open={Boolean(menu.target)}\n                anchorEl={menu.target}\n                anchorPosition={{ top: menu.mouse[1], left: menu.mouse[0] }}\n                anchorReference={'anchorPosition'}\n                onContextMenu={e => {\n                    e.preventDefault();\n                    return closeMenu();\n                }}\n                onClose={() => closeMenu()}\n            >\n                <Button size=\"small\" onClick={menuButtonClick}>\n                    favorite\n                </Button>\n            </Menu>\n        </div>\n    );\n\n    // This is used to place each tile selector over the image container just as if it had the 300/300 grid the game does.\n    function tileMath(x, y) {\n        return [1 + (x - (x % 32)) / 32, 300 - (y - (y % 32)) / 32];\n    }\n\n    // This is used to position each tile selector correctly, this is the CSS value applied to its absolute position.\n    function tilePosition(x, y) {\n        if (!y && typeof x === 'object') [x, y] = x;\n        return {\n            left: (x - 1) * 32 * scale + tf.pos[0],\n            top: -(y - 300) * 32 * scale + tf.pos[1],\n        };\n    }\n\n    // This is used to find the absolute pixel value of where a user clicked. The positioning of the image needs to be\n    // subtracted from the X and Y value of a users click, and the scale needs to be removed to find this value.\n    function imgCoords(x, y, funcScale = scale, pos = tf.pos) {\n        return [x - pos[0], y - pos[1]].map(i => i / funcScale);\n    }\n\n    function mouseClick(e) {\n        const { clientX, clientY } = e;\n        // Detect if we moved\n        if (tf.mouse[0] !== clientX || tf.mouse[1] !== clientY) return;\n        return transform(tf => ({ ...tf, selectedTile: tileMath(...imgCoords(clientX, clientY)) }));\n    }\n\n    function mouseDown(e) {\n        clickDown(true);\n        const { clientX, clientY } = e;\n        return transform(tf => ({ ...tf, mouse: [clientX, clientY], initial: imgCoords(clientX, clientY, 1) }));\n    }\n\n    function mouseMove(e) {\n        if (!mousedown) return;\n        const { clientX, clientY } = e;\n        return transform(tf => ({ ...tf, pos: imgCoords(clientX, clientY, 1, tf.initial) }));\n    }\n\n    function mouseWheel(e, val = 1) {\n        if (mousedown) return;\n        let { deltaY, clientX, clientY } = e;\n        if (deltaY > 0) {\n            if (zoom === 2) return;\n            setZoom(zoom - val);\n        } else {\n            if (zoom === 15) return;\n            setZoom(zoom + val);\n        }\n        const newScale = (deltaY > 0 ? zoom - val : zoom + val) / 10;\n        const [imageX, imageY] = imgCoords(clientX, clientY);\n        return transform(tf => ({ ...tf, pos: [-imageX * newScale + clientX, -imageY * newScale + clientY] }));\n    }\n\n    function centerCoords(centerScale = 12, modifier = [0, 0], newTile) {\n        const tile = newTile ? newTile : tf.selectedTile;\n        // Default to 1.2 scale, optional arg to change this\n        setZoom(centerScale);\n        const newScale = centerScale / 10;\n        const [tileX, tileY] = [\n            (tile[0] - 1 + modifier[0]) * 32 * newScale,\n            -(tile[1] - 303 + modifier[1]) * 32 * newScale,\n        ];\n        const [centerX, centerY] = [window.screen.width / 2, window.screen.height / 2];\n        return transform(tf => ({ ...tf, pos: [-tileX + centerX, -tileY + centerY] }));\n    }\n\n    function keyDown(e) {\n        if (!focussed) return;\n        let { key, altKey } = e;\n        if (!altKey) return;\n        if (key === '5' || key === ' ') return centerCoords(zoom);\n        let acceptableKeys = {\n            w: [0, 1],\n            a: [-1, 0],\n            s: [0, -1],\n            d: [1, 0],\n            ArrowUp: [0, 1],\n            ArrowLeft: [-1, 0],\n            ArrowDown: [0, -1],\n            ArrowRight: [1, 0],\n            '1': [-1, -1],\n            '2': [0, -1],\n            '3': [1, -1],\n            '4': [-1, 0],\n            '6': [1, 0],\n            '7': [-1, 1],\n            '8': [0, 1],\n            '9': [1, 1],\n            '+': 2,\n            '-': -2,\n        };\n        if (!Object.keys(acceptableKeys).includes(key)) return;\n        else {\n            const val = acceptableKeys[key];\n            if (key === '+' || key === '-') {\n                if (key === '+' && zoom >= 15) return;\n                if (key === '-' && zoom <= 3) return;\n                setZoom(zoom + val);\n                return centerCoords(zoom + val);\n            }\n            centerCoords(zoom, val);\n            return transform(tf => ({\n                ...tf,\n                selectedTile: [tf.selectedTile[0] + val[0], tf.selectedTile[1] + val[1]],\n            }));\n        }\n    }\n\n    function contextMenu(e) {\n        e.preventDefault();\n        const { clientX, clientY, target } = e;\n        return doMenu(prev => ({ ...prev, target: target, mouse: [clientX, clientY] }));\n    }\n\n    function menuButtonClick(e) {\n        closeMenu();\n        return modFavorites(prev => {\n            prev[selectedMap].push({\n                name: `Favorite #${prev[selectedMap].length + 1}`,\n                location: tileMath(...imgCoords(menu.mouse[0], menu.mouse[1])),\n            });\n            return prev;\n        });\n    }\n\n    function closeMenu() {\n        return doMenu(prev => ({ ...prev, target: null }));\n    }\n\n    function setStorage(favs) {\n        if (typeof favs !== 'string') favs = JSON.stringify(favs);\n        localStorage.setItem('telescienceFavorites', favs);\n    }\n\n    function getStorage() {\n        let data = localStorage.getItem('telescienceFavorites');\n        if (!data) return false;\n        data = JSON.parse(data);\n        let localKeys = Object.keys(data),\n            stateKeys = Object.keys(favorites);\n        if (localKeys.length !== stateKeys.length || JSON.stringify(localKeys) !== JSON.stringify(stateKeys)) {\n            let missingKey = stateKeys.filter(oKey => !localKeys.includes(oKey));\n            let extraKey = localKeys.filter(oKey => !stateKeys.includes(oKey));\n            if (missingKey.length) {\n                missingKey.forEach(key => {\n                    let obj = {};\n                    obj[key] = favorites[key];\n                    data = { ...data, ...obj };\n                });\n            }\n            if (extraKey.length) {\n                extraKey.forEach(key => {\n                    let obj = {};\n                    localKeys.pop(...extraKey);\n                    localKeys.forEach(key => {\n                        obj[key] = data[key];\n                    });\n                    data = obj;\n                });\n            }\n        }\n        return data;\n    }\n\n    function easterEgg(...args) {\n        return (\n            <>\n                {args.map((info, i) => {\n                    if (!info.pos) info.pos = [150 + i, 151 + i];\n                    info.pos[0]--;\n                    info.pos[1] = 300 - info.pos[1];\n                    return (\n                        <a\n                            key={`easteregg#${i + 1}`}\n                            style={{ color: 'inherit' }}\n                            href={info.link}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <Info style={{ ...easterEggPos(...info.pos), color: info.color }} />\n                        </a>\n                    );\n                })}\n            </>\n        );\n    }\n\n    function easterEggPos(x, y) {\n        return {\n            zIndex: 2,\n            position: 'absolute',\n            left: x * 32 * scale + tf.pos[0],\n            top: y * 32 * scale + tf.pos[1],\n            width: 32 * scale,\n            height: 32 * scale,\n        };\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './pages/Main';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nconst App = props => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Main />\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}